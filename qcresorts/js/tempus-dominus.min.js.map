{"version":3,"names":["tempusDominus","$","luxon","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","Unit","$__default","luxon__namespace","twoDigitTemplate","month","day","year","hour","minute","second","hour12","twoDigitTwentyFourTemplate","getFormatByUnit","unit","dateStyle","DateTime","Date","constructor","super","arguments","this","locale","nonLeapLadder","leapLadder","setLocale","value","static","date","Error","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","input","localization","clone","hours","minutes","seconds","startOf","startOfTheWeek","undefined","setMilliseconds","setSeconds","setMinutes","setHours","weekDay","goBack","manipulate","setDate","setMonth","endOf","format","template","Intl","DateTimeFormat","isBefore","compare","valueOf","isAfter","isSame","convert","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","parts","timeStyle","formatToParts","filter","x","type","secondsFormatted","minutesFormatted","hoursFormatted","twelveHoursFormatted","meridiem","find","p","dateFormatted","getDay","targetMonth","endOfMonth","monthFormatted","setFullYear","week","ordinal","computeOrdinal","weekday","getUTCDay","weekNumber","Math","floor","weeksInWeekYear","weekYear","p1","last","p2","isLeapYear","TdError","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","error","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRange","lower","upper","failedToParseDate","soft","console","warn","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","customDateFormatError","dateString","throwError","NAME","Namespace","dataKey","events","Events","key","change","update","show","hide","blur","focus","keyup","keydown","css","Css","widget","calendarHeader","switch","toolbar","noHighlight","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","monthsContainer","daysContainer","calendarWeeks","dayOfTheWeek","today","weekend","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","toggleMeridiem","collapsing","collapse","inline","lightTheme","darkTheme","isDarkPreferredQuery","errorMessages","ServiceLocator","cache","Map","locate","identifier","service","set","serviceLocator","CalendarModes","name","className","step","OptionsStore","viewDate","_currentCalendarViewMode","minimumCalendarViewMode","currentView","currentCalendarViewMode","refreshCurrentView","Validation","optionsStore","isValid","targetDate","granularity","options","restrictions","disabledDates","length","_isInDisabledDates","enabledDates","_isInEnabledDates","daysOfWeekDisabled","indexOf","minDate","maxDate","disabledHours","_isInDisabledHours","enabledHours","_isInEnabledHours","disabledTimeIntervals","from","to","testDate","formattedDate","map","EventEmitter","subscribers","subscribe","callback","push","unsubscribe","bind","index","splice","emit","destroy","EventEmitters","triggerEvent","viewUpdate","updateDisplay","action","DefaultOptions","display","icons","time","up","down","clear","close","viewMode","toolbarPlacement","keepOpen","buttons","components","calendar","decades","clock","useTwentyfourHour","theme","stepping","useCurrent","defaultDate","selectMonth","previousMonth","nextMonth","selectYear","previousYear","nextYear","selectDecade","previousDecade","nextDecade","previousCentury","nextCentury","pickHour","incrementHour","decrementHour","pickMinute","incrementMinute","decrementMinute","pickSecond","incrementSecond","decrementSecond","selectTime","selectDate","dayViewHeaderFormat","dateFormats","LTS","LT","L","LL","LLL","LLLL","keepInvalid","debug","allowInputToggle","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","meta","container","OptionConverter","o","inputElement","HTMLElement","Element","Array","isArray","deepCopy","paths","obj","charAt","slice","split","reduce","isValue","provided","copyTo","path","defaultOptions","objectPath","unsupportedOptions","includes","flattenedOptions","getFlattenDefaultOptions","errors","didYouMean","y","defaultOptionValue","providedType","defaultType","substring","lastIndexOf","ignoreProperties","processKey","spread","dateTime","dateConversion","_typeCheckNumberArray","_typeCheckDateArray","valueObject","i","vk","subOptionName","keyOptions","appendChild","toString","providedOptions","mergeTo","newConfig","element","eData","JSON","parse","stringify","dataset","tdTargetInput","tdTargetToggle","DOMStringMap","dataOptions","objectToNormalized","object","lowered","toLowerCase","rabbitHole","optionSubgroup","keyOption","internalObject","optionsLower","startsWith","_mergeOptions","fromString","converted","_dateTypeCheck","_flattenDefaults","deepKeys","t","pre","entries","flatMap","v","config","a","Dates","_dates","validation","_eventEmitters","picked","lastPicked","lastPickedIndex","formatInput","parseInput","setFromInput","setValue","add","isPicked","innerDateFormatted","pickedIndex","unset","oldDate","isClear","factor","startYear","target","noIndex","updateInput","newValue","round","reason","ActionTypes","ActionTypes$1","DateDisplay","dates","getPicker","document","createElement","classList","append","_daysOfTheWeek","div","setAttribute","selectDay","_update","paint","getElementsByClassName","switcher","parentElement","getElementsByTagName","remove","innerDate","querySelectorAll","containerClone","contains","innerText","classes","row","htmlDivElement","MonthDisplay","YearDisplay","_startYear","_endYear","DecadeDisplay","start","end","getStartEndYear","_startDecade","_endDecade","pickedYears","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_gridColumns","iconTag","_grid","timesDiv","querySelector","incrementHours","decrementHours","incrementMinutes","decrementMinutes","incrementSeconds","decrementSeconds","toggle","style","gridTemplateAreas","top","middle","bottom","upIcon","downIcon","separatorColon","cloneNode","innerHTML","getSeparator","colon","divElement","showHours","showMinutes","showSeconds","button","trim","HourDisplay","selectHour","MinuteDisplay","selectMinute","secondDisplay","selectSecond","Collapse","height","setTimeout","showImmediately","getTransitionDurationFromElement","scrollHeight","getBoundingClientRect","offsetHeight","hideImmediately","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","Display","_isVisible","_documentClickEvent","composedPath","_actionsClickEvent","dateDisplay","monthDisplay","yearDisplay","decadeDisplay","timeDisplay","hourDisplay","minuteDisplay","_widget","result","isVisible","_hasTime","_updateCalendarHeader","_hasDate","_unit","_date","_classes","_element","tries","direction","_buildWidget","_updateTheme","onlyClock","showClock","_showMode","body","createPopup","modifiers","enabled","placement","documentElement","dir","then","addEventListener","updatePopup","async","createPopperFunction","Popper","createPopper","import","_popperInstance","max","min","datePickerMode","picker","_getThemeClass","matchMedia","removeEventListener","currentTheme","isDarkMode","matches","showing","getAttribute","_dispose","parentNode","removeChild","dateView","getHeadTemplate","timeView","_iconTag","getToolbarElements","arrow","title","icon","togglePicker","changeCalendarView","iconClass","svg","createElementNS","_rebuild","wasVisible","Actions","do","currentTarget","handleNextPrevious","hideOrClock","manipulateAndSet","outerHTML","handleShowClockContainers","htmlElement","classToUse","newDate","TempusDominus","_subscribers","_isDisabled","_inputChangeEvent","event","internallyTriggered","detail","setViewDate","valueSplit","_toggleClickEvent","actions","_initializeOptions","_initializeInput","_initializeToggle","_triggerEvent","_viewUpdate","updateOptions","reset","disable","enable","removeAttribute","eventTypes","callbacks","callBackArray","returnArray","eventType","_unsubscribe","dispose","_toggle","language","asked","loadedLocales","isChangeEvent","_handleAfterChangeEvent","dispatchEvent","CustomEvent","jQuery","trigger","_publish","eventName","includeDataset","_dataToOptions","_validateConflicts","findIndex","dayPeriod","tagName","query","clearTimeout","_currentPromptTimeTimeout","loadLocale","l","extend","plugin","option","installed","tempusDominus$1","version","__proto__","tdClasses","tdFactory","prototype","parsedDate","fromFormat","toJSDate","getTime","fromJSDate","toFormat","jQueryInterface","argument","jQueryHandleThis","each","me","data","isDateUpdateThroughDateOptionFromClientCode","ret","getSelectorFromElement","$element","$selector","selector","attr","test","JQUERY_NO_CONFLICT","fn","Constructor","noConflict"],"sources":["./dist/js/tempus-dominus.js"],"sourcesContent":["/*!\n  * Tempus Dominus v6.2.5 (https://getdatepicker.com/)\n  * Copyright 2013-2022 Jonathan Peterson\n  * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n  */\nvar tempusDominus = (function ($, luxon) {\n  'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () { return e[k]; }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return n;\n  }\n\n  var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n  var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n  var Unit;\r\n  (function (Unit) {\r\n      Unit[\"seconds\"] = \"seconds\";\r\n      Unit[\"minutes\"] = \"minutes\";\r\n      Unit[\"hours\"] = \"hours\";\r\n      Unit[\"date\"] = \"date\";\r\n      Unit[\"month\"] = \"month\";\r\n      Unit[\"year\"] = \"year\";\r\n  })(Unit || (Unit = {}));\r\n  const twoDigitTemplate = {\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n      hour12: true,\r\n  };\r\n  const twoDigitTwentyFourTemplate = {\r\n      hour: '2-digit',\r\n      hour12: false\r\n  };\r\n  const getFormatByUnit = (unit) => {\r\n      switch (unit) {\r\n          case 'date':\r\n              return { dateStyle: 'short' };\r\n          case 'month':\r\n              return {\r\n                  month: 'numeric',\r\n                  year: 'numeric'\r\n              };\r\n          case 'year':\r\n              return { year: 'numeric' };\r\n      }\r\n  };\r\n  /**\r\n   * For the most part this object behaves exactly the same way\r\n   * as the native Date object with a little extra spice.\r\n   */\r\n  class DateTime extends Date {\r\n      constructor() {\r\n          super(...arguments);\r\n          /**\r\n           * Used with Intl.DateTimeFormat\r\n           */\r\n          this.locale = 'default';\r\n          this.nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n          this.leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\r\n      }\r\n      /**\r\n       * Chainable way to set the {@link locale}\r\n       * @param value\r\n       */\r\n      setLocale(value) {\r\n          this.locale = value;\r\n          return this;\r\n      }\r\n      /**\r\n       * Converts a plain JS date object to a DateTime object.\r\n       * Doing this allows access to format, etc.\r\n       * @param  date\r\n       * @param locale\r\n       */\r\n      static convert(date, locale = 'default') {\r\n          if (!date)\r\n              throw new Error(`A date is required`);\r\n          return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()).setLocale(locale);\r\n      }\r\n      /**\r\n       * Attempts to create a DateTime from a string. A customDateFormat is required for non US dates.\r\n       * @param input\r\n       * @param localization\r\n       */\r\n      static fromString(input, localization) {\r\n          return new DateTime(input);\r\n      }\r\n      /**\r\n       * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n       */\r\n      get clone() {\r\n          return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocale(this.locale);\r\n      }\r\n      /**\r\n       * Sets the current date to the start of the {@link unit} provided\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n       * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n       * @param unit\r\n       * @param startOfTheWeek Allows for the changing the start of the week.\r\n       */\r\n      startOf(unit, startOfTheWeek = 0) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          switch (unit) {\r\n              case 'seconds':\r\n                  this.setMilliseconds(0);\r\n                  break;\r\n              case 'minutes':\r\n                  this.setSeconds(0, 0);\r\n                  break;\r\n              case 'hours':\r\n                  this.setMinutes(0, 0, 0);\r\n                  break;\r\n              case 'date':\r\n                  this.setHours(0, 0, 0, 0);\r\n                  break;\r\n              case 'weekDay':\r\n                  this.startOf(Unit.date);\r\n                  if (this.weekDay === startOfTheWeek)\r\n                      break;\r\n                  let goBack = this.weekDay;\r\n                  if (startOfTheWeek !== 0 && this.weekDay === 0)\r\n                      goBack = 8 - startOfTheWeek;\r\n                  this.manipulate(startOfTheWeek - goBack, Unit.date);\r\n                  break;\r\n              case 'month':\r\n                  this.startOf(Unit.date);\r\n                  this.setDate(1);\r\n                  break;\r\n              case 'year':\r\n                  this.startOf(Unit.date);\r\n                  this.setMonth(0, 1);\r\n                  break;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Sets the current date to the end of the {@link unit} provided\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n       * would return April 30, 2021, 11:59:59.999 PM\r\n       * @param unit\r\n       * @param startOfTheWeek\r\n       */\r\n      endOf(unit, startOfTheWeek = 0) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          switch (unit) {\r\n              case 'seconds':\r\n                  this.setMilliseconds(999);\r\n                  break;\r\n              case 'minutes':\r\n                  this.setSeconds(59, 999);\r\n                  break;\r\n              case 'hours':\r\n                  this.setMinutes(59, 59, 999);\r\n                  break;\r\n              case 'date':\r\n                  this.setHours(23, 59, 59, 999);\r\n                  break;\r\n              case 'weekDay':\r\n                  this.endOf(Unit.date);\r\n                  this.manipulate((6 + startOfTheWeek) - this.weekDay, Unit.date);\r\n                  break;\r\n              case 'month':\r\n                  this.endOf(Unit.date);\r\n                  this.manipulate(1, Unit.month);\r\n                  this.setDate(0);\r\n                  break;\r\n              case 'year':\r\n                  this.endOf(Unit.date);\r\n                  this.manipulate(1, Unit.year);\r\n                  this.setDate(0);\r\n                  break;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Change a {@link unit} value. Value can be positive or negative\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n       * would return May 30, 2021, 11:45:32.984 AM\r\n       * @param value A positive or negative number\r\n       * @param unit\r\n       */\r\n      manipulate(value, unit) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          this[unit] += value;\r\n          return this;\r\n      }\r\n      /**\r\n       * Returns a string format.\r\n       * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n       * for valid templates and locale objects\r\n       * @param template An object. Uses browser defaults otherwise.\r\n       * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.\r\n       */\r\n      format(template, locale = this.locale) {\r\n          return new Intl.DateTimeFormat(locale, template).format(this);\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is before this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparision.\r\n       */\r\n      isBefore(compare, unit) {\r\n          if (!unit)\r\n              return this.valueOf() < compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is after this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparision.\r\n       */\r\n      isAfter(compare, unit) {\r\n          if (!unit)\r\n              return this.valueOf() > compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is same this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparision.\r\n       */\r\n      isSame(compare, unit) {\r\n          if (!unit)\r\n              return this.valueOf() === compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          compare = DateTime.convert(compare);\r\n          return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n       * @param left\r\n       * @param right\r\n       * @param unit.\r\n       * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n       * If the inclusivity parameter is used, both indicators must be passed.\r\n       */\r\n      isBetween(left, right, unit, inclusivity = '()') {\r\n          if (unit && this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          const leftInclusivity = inclusivity[0] === '(';\r\n          const rightInclusivity = inclusivity[1] === ')';\r\n          return (((leftInclusivity\r\n              ? this.isAfter(left, unit)\r\n              : !this.isBefore(left, unit)) &&\r\n              (rightInclusivity\r\n                  ? this.isBefore(right, unit)\r\n                  : !this.isAfter(right, unit))) ||\r\n              ((leftInclusivity\r\n                  ? this.isBefore(left, unit)\r\n                  : !this.isAfter(left, unit)) &&\r\n                  (rightInclusivity\r\n                      ? this.isAfter(right, unit)\r\n                      : !this.isBefore(right, unit))));\r\n      }\r\n      /**\r\n       * Returns flattened object of the date. Does not include literals\r\n       * @param locale\r\n       * @param template\r\n       */\r\n      parts(locale = this.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n          const parts = {};\r\n          new Intl.DateTimeFormat(locale, template)\r\n              .formatToParts(this)\r\n              .filter((x) => x.type !== 'literal')\r\n              .forEach((x) => (parts[x.type] = x.value));\r\n          return parts;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getSeconds()\r\n       */\r\n      get seconds() {\r\n          return this.getSeconds();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setSeconds()\r\n       */\r\n      set seconds(value) {\r\n          this.setSeconds(value);\r\n      }\r\n      /**\r\n       * Returns two digit hours\r\n       */\r\n      get secondsFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).second;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getMinutes()\r\n       */\r\n      get minutes() {\r\n          return this.getMinutes();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setMinutes()\r\n       */\r\n      set minutes(value) {\r\n          this.setMinutes(value);\r\n      }\r\n      /**\r\n       * Returns two digit minutes\r\n       */\r\n      get minutesFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).minute;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getHours()\r\n       */\r\n      get hours() {\r\n          return this.getHours();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setHours()\r\n       */\r\n      set hours(value) {\r\n          this.setHours(value);\r\n      }\r\n      /**\r\n       * Returns two digit hours\r\n       */\r\n      get hoursFormatted() {\r\n          return this.parts(undefined, twoDigitTwentyFourTemplate).hour;\r\n      }\r\n      /**\r\n       * Returns two digit hours but in twelve hour mode e.g. 13 -> 1\r\n       */\r\n      get twelveHoursFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).hour;\r\n      }\r\n      /**\r\n       * Get the meridiem of the date. E.g. AM or PM.\r\n       * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n       * otherwise it will return AM or PM.\r\n       * @param locale\r\n       */\r\n      meridiem(locale = this.locale) {\r\n          return new Intl.DateTimeFormat(locale, {\r\n              hour: 'numeric',\r\n              hour12: true\r\n          })\r\n              .formatToParts(this)\r\n              .find((p) => p.type === 'dayPeriod')?.value;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getDate()\r\n       */\r\n      get date() {\r\n          return this.getDate();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setDate()\r\n       */\r\n      set date(value) {\r\n          this.setDate(value);\r\n      }\r\n      /**\r\n       * Return two digit date\r\n       */\r\n      get dateFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).day;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getDay()\r\n       */\r\n      get weekDay() {\r\n          return this.getDay();\r\n      }\r\n      /**\r\n       * Shortcut to Date.getMonth()\r\n       */\r\n      get month() {\r\n          return this.getMonth();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setMonth()\r\n       */\r\n      set month(value) {\r\n          const targetMonth = new Date(this.year, value + 1);\r\n          targetMonth.setDate(0);\r\n          const endOfMonth = targetMonth.getDate();\r\n          if (this.date > endOfMonth) {\r\n              this.date = endOfMonth;\r\n          }\r\n          this.setMonth(value);\r\n      }\r\n      /**\r\n       * Return two digit, human expected month. E.g. January = 1, December = 12\r\n       */\r\n      get monthFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).month;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getFullYear()\r\n       */\r\n      get year() {\r\n          return this.getFullYear();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setFullYear()\r\n       */\r\n      set year(value) {\r\n          this.setFullYear(value);\r\n      }\r\n      // borrowed a bunch of stuff from Luxon\r\n      /**\r\n       * Gets the week of the year\r\n       */\r\n      get week() {\r\n          const ordinal = this.computeOrdinal(), weekday = this.getUTCDay();\r\n          let weekNumber = Math.floor((ordinal - weekday + 10) / 7);\r\n          if (weekNumber < 1) {\r\n              weekNumber = this.weeksInWeekYear(this.year - 1);\r\n          }\r\n          else if (weekNumber > this.weeksInWeekYear(this.year)) {\r\n              weekNumber = 1;\r\n          }\r\n          return weekNumber;\r\n      }\r\n      weeksInWeekYear(weekYear) {\r\n          const p1 = (weekYear +\r\n              Math.floor(weekYear / 4) -\r\n              Math.floor(weekYear / 100) +\r\n              Math.floor(weekYear / 400)) %\r\n              7, last = weekYear - 1, p2 = (last +\r\n              Math.floor(last / 4) -\r\n              Math.floor(last / 100) +\r\n              Math.floor(last / 400)) %\r\n              7;\r\n          return p1 === 4 || p2 === 3 ? 53 : 52;\r\n      }\r\n      get isLeapYear() {\r\n          return this.year % 4 === 0 && (this.year % 100 !== 0 || this.year % 400 === 0);\r\n      }\r\n      computeOrdinal() {\r\n          return this.date + (this.isLeapYear ? this.leapLadder : this.nonLeapLadder)[this.month];\r\n      }\r\n  }\n\n  class TdError extends Error {\r\n  }\r\n  class ErrorMessages {\r\n      constructor() {\r\n          this.base = 'TD:';\r\n          //#endregion\r\n          //#region used with notify.error\r\n          /**\r\n           * Used with an Error Event type if the user selects a date that\r\n           * fails restriction validation.\r\n           */\r\n          this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n          /**\r\n           * Used with an Error Event type when a user changes the value of the\r\n           * input field directly, and does not provide a valid date.\r\n           */\r\n          this.failedToParseInput = 'Failed parse input field';\r\n          //#endregion\r\n      }\r\n      //#region out to console\r\n      /**\r\n       * Throws an error indicating that a key in the options object is invalid.\r\n       * @param optionName\r\n       */\r\n      unexpectedOption(optionName) {\r\n          const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n          error.code = 1;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error indicating that one more keys in the options object is invalid.\r\n       * @param optionName\r\n       */\r\n      unexpectedOptions(optionName) {\r\n          const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n          error.code = 1;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option is provide an unsupported value.\r\n       * For example a value of 'cheese' for toolbarPlacement which only supports\r\n       * 'top', 'bottom', 'default'.\r\n       * @param optionName\r\n       * @param badValue\r\n       * @param validOptions\r\n       */\r\n      unexpectedOptionValue(optionName, badValue, validOptions) {\r\n          const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n          error.code = 2;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option value is the wrong type.\r\n       * For example a string value was provided to multipleDates which only\r\n       * supports true or false.\r\n       * @param optionName\r\n       * @param badType\r\n       * @param expectedType\r\n       */\r\n      typeMismatch(optionName, badType, expectedType) {\r\n          const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n          error.code = 3;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option value is  outside of the expected range.\r\n       * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n       * @param optionName\r\n       * @param lower\r\n       * @param upper\r\n       */\r\n      numbersOutOfRange(optionName, lower, upper) {\r\n          const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n          error.code = 4;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when a value for a date options couldn't be parsed. Either\r\n       * the option was an invalid string or an invalid Date object.\r\n       * @param optionName\r\n       * @param date\r\n       * @param soft If true, logs a warning instead of an error.\r\n       */\r\n      failedToParseDate(optionName, date, soft = false) {\r\n          const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for ${optionName}.`);\r\n          error.code = 5;\r\n          if (!soft)\r\n              throw error;\r\n          console.warn(error);\r\n      }\r\n      /**\r\n       * Throws when an element to attach to was not provided in the constructor.\r\n       */\r\n      mustProvideElement() {\r\n          const error = new TdError(`${this.base} No element was provided.`);\r\n          error.code = 6;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws if providing an array for the events to subscribe method doesn't have\r\n       * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n       */\r\n      subscribeMismatch() {\r\n          const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n          error.code = 7;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n       */\r\n      conflictingConfiguration(message) {\r\n          const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n          error.code = 8;\r\n          throw error;\r\n      }\r\n      /**\r\n       * customDateFormat errors\r\n       */\r\n      customDateFormatError(message) {\r\n          const error = new TdError(`${this.base} customDateFormat: ${message}`);\r\n          error.code = 9;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Logs a warning if a date option value is provided as a string, instead of\r\n       * a date/datetime object.\r\n       */\r\n      dateString() {\r\n          console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string or use the customDateFormat plugin.`);\r\n      }\r\n      throwError(message) {\r\n          const error = new TdError(`${this.base} ${message}`);\r\n          error.code = 9;\r\n          throw error;\r\n      }\r\n  }\n\n  // this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n  const NAME = 'tempus-dominus', dataKey = 'td';\r\n  /**\r\n   * Events\r\n   */\r\n  class Events {\r\n      constructor() {\r\n          this.key = `.${dataKey}`;\r\n          /**\r\n           * Change event. Fired when the user selects a date.\r\n           * See also EventTypes.ChangeEvent\r\n           */\r\n          this.change = `change${this.key}`;\r\n          /**\r\n           * Emit when the view changes for example from month view to the year view.\r\n           * See also EventTypes.ViewUpdateEvent\r\n           */\r\n          this.update = `update${this.key}`;\r\n          /**\r\n           * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n           * See also EventTypes.FailEvent\r\n           */\r\n          this.error = `error${this.key}`;\r\n          /**\r\n           * Show event\r\n           * @event Events#show\r\n           */\r\n          this.show = `show${this.key}`;\r\n          /**\r\n           * Hide event\r\n           * @event Events#hide\r\n           */\r\n          this.hide = `hide${this.key}`;\r\n          // blur and focus are used in the jQuery provider but are otherwise unused.\r\n          // keyup/down will be used later for keybinding options\r\n          this.blur = `blur${this.key}`;\r\n          this.focus = `focus${this.key}`;\r\n          this.keyup = `keyup${this.key}`;\r\n          this.keydown = `keydown${this.key}`;\r\n      }\r\n  }\r\n  class Css {\r\n      constructor() {\r\n          /**\r\n           * The outer element for the widget.\r\n           */\r\n          this.widget = `${NAME}-widget`;\r\n          /**\r\n           * Hold the previous, next and switcher divs\r\n           */\r\n          this.calendarHeader = 'calendar-header';\r\n          /**\r\n           * The element for the action to change the calendar view. E.g. month -> year.\r\n           */\r\n          this.switch = 'picker-switch';\r\n          /**\r\n           * The elements for all the toolbar options\r\n           */\r\n          this.toolbar = 'toolbar';\r\n          /**\r\n           * Disables the hover and rounding affect.\r\n           */\r\n          this.noHighlight = 'no-highlight';\r\n          /**\r\n           * Applied to the widget element when the side by side option is in use.\r\n           */\r\n          this.sideBySide = 'timepicker-sbs';\r\n          /**\r\n           * The element for the action to change the calendar view, e.g. August -> July\r\n           */\r\n          this.previous = 'previous';\r\n          /**\r\n           * The element for the action to change the calendar view, e.g. August -> September\r\n           */\r\n          this.next = 'next';\r\n          /**\r\n           * Applied to any action that would violate any restriction options. ALso applied\r\n           * to an input field if the disabled function is called.\r\n           */\r\n          this.disabled = 'disabled';\r\n          /**\r\n           * Applied to any date that is less than requested view,\r\n           * e.g. the last day of the previous month.\r\n           */\r\n          this.old = 'old';\r\n          /**\r\n           * Applied to any date that is greater than of requested view,\r\n           * e.g. the last day of the previous month.\r\n           */\r\n          this.new = 'new';\r\n          /**\r\n           * Applied to any date that is currently selected.\r\n           */\r\n          this.active = 'active';\r\n          //#region date element\r\n          /**\r\n           * The outer element for the calendar view.\r\n           */\r\n          this.dateContainer = 'date-container';\r\n          /**\r\n           * The outer element for the decades view.\r\n           */\r\n          this.decadesContainer = `${this.dateContainer}-decades`;\r\n          /**\r\n           * Applied to elements within the decades container, e.g. 2020, 2030\r\n           */\r\n          this.decade = 'decade';\r\n          /**\r\n           * The outer element for the years view.\r\n           */\r\n          this.yearsContainer = `${this.dateContainer}-years`;\r\n          /**\r\n           * Applied to elements within the years container, e.g. 2021, 2021\r\n           */\r\n          this.year = 'year';\r\n          /**\r\n           * The outer element for the month view.\r\n           */\r\n          this.monthsContainer = `${this.dateContainer}-months`;\r\n          /**\r\n           * Applied to elements within the month container, e.g. January, February\r\n           */\r\n          this.month = 'month';\r\n          /**\r\n           * The outer element for the calendar view.\r\n           */\r\n          this.daysContainer = `${this.dateContainer}-days`;\r\n          /**\r\n           * Applied to elements within the day container, e.g. 1, 2..31\r\n           */\r\n          this.day = 'day';\r\n          /**\r\n           * If display.calendarWeeks is enabled, a column displaying the week of year\r\n           * is shown. This class is applied to each cell in that column.\r\n           */\r\n          this.calendarWeeks = 'cw';\r\n          /**\r\n           * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n           */\r\n          this.dayOfTheWeek = 'dow';\r\n          /**\r\n           * Applied to the current date on the calendar view.\r\n           */\r\n          this.today = 'today';\r\n          /**\r\n           * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n           */\r\n          this.weekend = 'weekend';\r\n          //#endregion\r\n          //#region time element\r\n          /**\r\n           * The outer element for all time related elements.\r\n           */\r\n          this.timeContainer = 'time-container';\r\n          /**\r\n           * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n           */\r\n          this.separator = 'separator';\r\n          /**\r\n           * The outer element for the clock view.\r\n           */\r\n          this.clockContainer = `${this.timeContainer}-clock`;\r\n          /**\r\n           * The outer element for the hours selection view.\r\n           */\r\n          this.hourContainer = `${this.timeContainer}-hour`;\r\n          /**\r\n           * The outer element for the minutes selection view.\r\n           */\r\n          this.minuteContainer = `${this.timeContainer}-minute`;\r\n          /**\r\n           * The outer element for the seconds selection view.\r\n           */\r\n          this.secondContainer = `${this.timeContainer}-second`;\r\n          /**\r\n           * Applied to each element in the hours selection view.\r\n           */\r\n          this.hour = 'hour';\r\n          /**\r\n           * Applied to each element in the minutes selection view.\r\n           */\r\n          this.minute = 'minute';\r\n          /**\r\n           * Applied to each element in the seconds selection view.\r\n           */\r\n          this.second = 'second';\r\n          /**\r\n           * Applied AM/PM toggle button.\r\n           */\r\n          this.toggleMeridiem = 'toggleMeridiem';\r\n          //#endregion\r\n          //#region collapse\r\n          /**\r\n           * Applied the element of the current view mode, e.g. calendar or clock.\r\n           */\r\n          this.show = 'show';\r\n          /**\r\n           * Applied to the currently showing view mode during a transition\r\n           * between calendar and clock views\r\n           */\r\n          this.collapsing = 'td-collapsing';\r\n          /**\r\n           * Applied to the currently hidden view mode.\r\n           */\r\n          this.collapse = 'td-collapse';\r\n          //#endregion\r\n          /**\r\n           * Applied to the widget when the option display.inline is enabled.\r\n           */\r\n          this.inline = 'inline';\r\n          /**\r\n           * Applied to the widget when the option display.theme is light.\r\n           */\r\n          this.lightTheme = 'light';\r\n          /**\r\n          * Applied to the widget when the option display.theme is dark.\r\n          */\r\n          this.darkTheme = 'dark';\r\n          /**\r\n          * Used for detecting if the system color preference is dark mode\r\n          */\r\n          this.isDarkPreferredQuery = '(prefers-color-scheme: dark)';\r\n      }\r\n  }\r\n  class Namespace {\r\n  }\r\n  Namespace.NAME = NAME;\r\n  // noinspection JSUnusedGlobalSymbols\r\n  Namespace.dataKey = dataKey;\r\n  Namespace.events = new Events();\r\n  Namespace.css = new Css();\r\n  Namespace.errorMessages = new ErrorMessages();\n\n  class ServiceLocator {\r\n      constructor() {\r\n          this.cache = new Map();\r\n      }\r\n      locate(identifier) {\r\n          const service = this.cache.get(identifier);\r\n          if (service)\r\n              return service;\r\n          const value = new identifier();\r\n          this.cache.set(identifier, value);\r\n          return value;\r\n      }\r\n  }\r\n  const setupServiceLocator = () => {\r\n      serviceLocator = new ServiceLocator();\r\n  };\r\n  let serviceLocator;\n\n  const CalendarModes = [\r\n      {\r\n          name: 'calendar',\r\n          className: Namespace.css.daysContainer,\r\n          unit: Unit.month,\r\n          step: 1,\r\n      },\r\n      {\r\n          name: 'months',\r\n          className: Namespace.css.monthsContainer,\r\n          unit: Unit.year,\r\n          step: 1,\r\n      },\r\n      {\r\n          name: 'years',\r\n          className: Namespace.css.yearsContainer,\r\n          unit: Unit.year,\r\n          step: 10,\r\n      },\r\n      {\r\n          name: 'decades',\r\n          className: Namespace.css.decadesContainer,\r\n          unit: Unit.year,\r\n          step: 100,\r\n      },\r\n  ];\n\n  class OptionsStore {\r\n      constructor() {\r\n          this.viewDate = new DateTime();\r\n          this._currentCalendarViewMode = 0;\r\n          this.minimumCalendarViewMode = 0;\r\n          this.currentView = 'calendar';\r\n      }\r\n      get currentCalendarViewMode() {\r\n          return this._currentCalendarViewMode;\r\n      }\r\n      set currentCalendarViewMode(value) {\r\n          this._currentCalendarViewMode = value;\r\n          this.currentView = CalendarModes[value].name;\r\n      }\r\n      /**\r\n       * When switching back to the calendar from the clock,\r\n       * this sets currentView to the correct calendar view.\r\n       */\r\n      refreshCurrentView() {\r\n          this.currentView = CalendarModes[this.currentCalendarViewMode].name;\r\n      }\r\n  }\n\n  /**\r\n   * Main class for date validation rules based on the options provided.\r\n   */\r\n  class Validation {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n      }\r\n      /**\r\n       * Checks to see if the target date is valid based on the rules provided in the options.\r\n       * Granularity can be provided to check portions of the date instead of the whole.\r\n       * @param targetDate\r\n       * @param granularity\r\n       */\r\n      isValid(targetDate, granularity) {\r\n          if (this.optionsStore.options.restrictions.disabledDates.length > 0 &&\r\n              this._isInDisabledDates(targetDate)) {\r\n              return false;\r\n          }\r\n          if (this.optionsStore.options.restrictions.enabledDates.length > 0 &&\r\n              !this._isInEnabledDates(targetDate)) {\r\n              return false;\r\n          }\r\n          if (granularity !== Unit.month &&\r\n              granularity !== Unit.year &&\r\n              this.optionsStore.options.restrictions.daysOfWeekDisabled?.length > 0 &&\r\n              this.optionsStore.options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1) {\r\n              return false;\r\n          }\r\n          if (this.optionsStore.options.restrictions.minDate &&\r\n              targetDate.isBefore(this.optionsStore.options.restrictions.minDate, granularity)) {\r\n              return false;\r\n          }\r\n          if (this.optionsStore.options.restrictions.maxDate &&\r\n              targetDate.isAfter(this.optionsStore.options.restrictions.maxDate, granularity)) {\r\n              return false;\r\n          }\r\n          if (granularity === Unit.hours ||\r\n              granularity === Unit.minutes ||\r\n              granularity === Unit.seconds) {\r\n              if (this.optionsStore.options.restrictions.disabledHours.length > 0 &&\r\n                  this._isInDisabledHours(targetDate)) {\r\n                  return false;\r\n              }\r\n              if (this.optionsStore.options.restrictions.enabledHours.length > 0 &&\r\n                  !this._isInEnabledHours(targetDate)) {\r\n                  return false;\r\n              }\r\n              if (this.optionsStore.options.restrictions.disabledTimeIntervals.length > 0) {\r\n                  for (let disabledTimeIntervals of this.optionsStore.options.restrictions.disabledTimeIntervals) {\r\n                      if (targetDate.isBetween(disabledTimeIntervals.from, disabledTimeIntervals.to))\r\n                          return false;\r\n                  }\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n      /**\r\n       * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n       * if the `testDate` is with in the array. Granularity is by date.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInDisabledDates(testDate) {\r\n          if (!this.optionsStore.options.restrictions.disabledDates ||\r\n              this.optionsStore.options.restrictions.disabledDates.length === 0)\r\n              return false;\r\n          const formattedDate = testDate.format(getFormatByUnit(Unit.date));\r\n          return this.optionsStore.options.restrictions.disabledDates\r\n              .map((x) => x.format(getFormatByUnit(Unit.date)))\r\n              .find((x) => x === formattedDate);\r\n      }\r\n      /**\r\n       * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n       * if the `testDate` is with in the array. Granularity is by date.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInEnabledDates(testDate) {\r\n          if (!this.optionsStore.options.restrictions.enabledDates ||\r\n              this.optionsStore.options.restrictions.enabledDates.length === 0)\r\n              return true;\r\n          const formattedDate = testDate.format(getFormatByUnit(Unit.date));\r\n          return this.optionsStore.options.restrictions.enabledDates\r\n              .map((x) => x.format(getFormatByUnit(Unit.date)))\r\n              .find((x) => x === formattedDate);\r\n      }\r\n      /**\r\n       * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n       * if the `testDate` is with in the array. Granularity is by hours.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInDisabledHours(testDate) {\r\n          if (!this.optionsStore.options.restrictions.disabledHours ||\r\n              this.optionsStore.options.restrictions.disabledHours.length === 0)\r\n              return false;\r\n          const formattedDate = testDate.hours;\r\n          return this.optionsStore.options.restrictions.disabledHours.find((x) => x === formattedDate);\r\n      }\r\n      /**\r\n       * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n       * if the `testDate` is with in the array. Granularity is by hours.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInEnabledHours(testDate) {\r\n          if (!this.optionsStore.options.restrictions.enabledHours ||\r\n              this.optionsStore.options.restrictions.enabledHours.length === 0)\r\n              return true;\r\n          const formattedDate = testDate.hours;\r\n          return this.optionsStore.options.restrictions.enabledHours.find((x) => x === formattedDate);\r\n      }\r\n  }\n\n  class EventEmitter {\r\n      constructor() {\r\n          this.subscribers = [];\r\n      }\r\n      subscribe(callback) {\r\n          this.subscribers.push(callback);\r\n          return this.unsubscribe.bind(this, this.subscribers.length - 1);\r\n      }\r\n      unsubscribe(index) {\r\n          this.subscribers.splice(index, 1);\r\n      }\r\n      emit(value) {\r\n          this.subscribers.forEach((callback) => {\r\n              callback(value);\r\n          });\r\n      }\r\n      destroy() {\r\n          this.subscribers = null;\r\n          this.subscribers = [];\r\n      }\r\n  }\r\n  class EventEmitters {\r\n      constructor() {\r\n          this.triggerEvent = new EventEmitter();\r\n          this.viewUpdate = new EventEmitter();\r\n          this.updateDisplay = new EventEmitter();\r\n          this.action = new EventEmitter();\r\n      }\r\n      destroy() {\r\n          this.triggerEvent.destroy();\r\n          this.viewUpdate.destroy();\r\n          this.updateDisplay.destroy();\r\n          this.action.destroy();\r\n      }\r\n  }\n\n  const DefaultOptions = {\r\n      restrictions: {\r\n          minDate: undefined,\r\n          maxDate: undefined,\r\n          disabledDates: [],\r\n          enabledDates: [],\r\n          daysOfWeekDisabled: [],\r\n          disabledTimeIntervals: [],\r\n          disabledHours: [],\r\n          enabledHours: []\r\n      },\r\n      display: {\r\n          icons: {\r\n              type: 'icons',\r\n              time: 'fa-solid fa-clock',\r\n              date: 'fa-solid fa-calendar',\r\n              up: 'fa-solid fa-arrow-up',\r\n              down: 'fa-solid fa-arrow-down',\r\n              previous: 'fa-solid fa-chevron-left',\r\n              next: 'fa-solid fa-chevron-right',\r\n              today: 'fa-solid fa-calendar-check',\r\n              clear: 'fa-solid fa-trash',\r\n              close: 'fa-solid fa-xmark'\r\n          },\r\n          sideBySide: false,\r\n          calendarWeeks: false,\r\n          viewMode: 'calendar',\r\n          toolbarPlacement: 'bottom',\r\n          keepOpen: false,\r\n          buttons: {\r\n              today: false,\r\n              clear: false,\r\n              close: false\r\n          },\r\n          components: {\r\n              calendar: true,\r\n              date: true,\r\n              month: true,\r\n              year: true,\r\n              decades: true,\r\n              clock: true,\r\n              hours: true,\r\n              minutes: true,\r\n              seconds: false,\r\n              useTwentyfourHour: undefined\r\n          },\r\n          inline: false,\r\n          theme: 'auto'\r\n      },\r\n      stepping: 1,\r\n      useCurrent: true,\r\n      defaultDate: undefined,\r\n      localization: {\r\n          today: 'Go to today',\r\n          clear: 'Clear selection',\r\n          close: 'Close the picker',\r\n          selectMonth: 'Select Month',\r\n          previousMonth: 'Previous Month',\r\n          nextMonth: 'Next Month',\r\n          selectYear: 'Select Year',\r\n          previousYear: 'Previous Year',\r\n          nextYear: 'Next Year',\r\n          selectDecade: 'Select Decade',\r\n          previousDecade: 'Previous Decade',\r\n          nextDecade: 'Next Decade',\r\n          previousCentury: 'Previous Century',\r\n          nextCentury: 'Next Century',\r\n          pickHour: 'Pick Hour',\r\n          incrementHour: 'Increment Hour',\r\n          decrementHour: 'Decrement Hour',\r\n          pickMinute: 'Pick Minute',\r\n          incrementMinute: 'Increment Minute',\r\n          decrementMinute: 'Decrement Minute',\r\n          pickSecond: 'Pick Second',\r\n          incrementSecond: 'Increment Second',\r\n          decrementSecond: 'Decrement Second',\r\n          toggleMeridiem: 'Toggle Meridiem',\r\n          selectTime: 'Select Time',\r\n          selectDate: 'Select Date',\r\n          dayViewHeaderFormat: { month: 'long', year: '2-digit' },\r\n          locale: 'default',\r\n          startOfTheWeek: 0,\r\n          /**\r\n           * This is only used with the customDateFormat plugin\r\n           */\r\n          dateFormats: {\r\n              LTS: 'h:mm:ss T',\r\n              LT: 'h:mm T',\r\n              L: 'MM/dd/yyyy',\r\n              LL: 'MMMM d, yyyy',\r\n              LLL: 'MMMM d, yyyy h:mm T',\r\n              LLLL: 'dddd, MMMM d, yyyy h:mm T',\r\n          },\r\n          /**\r\n           * This is only used with the customDateFormat plugin\r\n           */\r\n          ordinal: (n) => n,\r\n          /**\r\n           * This is only used with the customDateFormat plugin\r\n           */\r\n          format: 'L LT'\r\n      },\r\n      keepInvalid: false,\r\n      debug: false,\r\n      allowInputToggle: false,\r\n      viewDate: new DateTime(),\r\n      multipleDates: false,\r\n      multipleDatesSeparator: '; ',\r\n      promptTimeOnDateChange: false,\r\n      promptTimeOnDateChangeTransitionDelay: 200,\r\n      meta: {},\r\n      container: undefined\r\n  };\n\n  class OptionConverter {\r\n      static deepCopy(input) {\r\n          const o = {};\r\n          Object.keys(input).forEach((key) => {\r\n              const inputElement = input[key];\r\n              o[key] = inputElement;\r\n              if (typeof inputElement !== 'object' ||\r\n                  inputElement instanceof HTMLElement ||\r\n                  inputElement instanceof Element ||\r\n                  inputElement instanceof Date)\r\n                  return;\r\n              if (!Array.isArray(inputElement)) {\r\n                  o[key] = OptionConverter.deepCopy(inputElement);\r\n              }\r\n          });\r\n          return o;\r\n      }\r\n      /**\r\n       * Finds value out of an object based on a string, period delimited, path\r\n       * @param paths\r\n       * @param obj\r\n       */\r\n      static objectPath(paths, obj) {\r\n          if (paths.charAt(0) === '.')\r\n              paths = paths.slice(1);\r\n          if (!paths)\r\n              return obj;\r\n          return paths.split('.')\r\n              .reduce((value, key) => (OptionConverter.isValue(value) || OptionConverter.isValue(value[key]) ?\r\n              value[key] :\r\n              undefined), obj);\r\n      }\r\n      /**\r\n       * The spread operator caused sub keys to be missing after merging.\r\n       * This is to fix that issue by using spread on the child objects first.\r\n       * Also handles complex options like disabledDates\r\n       * @param provided An option from new providedOptions\r\n       * @param copyTo Destination object. This was added to prevent reference copies\r\n       * @param path\r\n     * @param localization\r\n       */\r\n      static spread(provided, copyTo, path = '', localization) {\r\n          const defaultOptions = OptionConverter.objectPath(path, DefaultOptions);\r\n          const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(defaultOptions).includes(x));\r\n          if (unsupportedOptions.length > 0) {\r\n              const flattenedOptions = OptionConverter.getFlattenDefaultOptions();\r\n              const errors = unsupportedOptions.map((x) => {\r\n                  let error = `\"${path}.${x}\" in not a known option.`;\r\n                  let didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                  if (didYouMean)\r\n                      error += `Did you mean \"${didYouMean}\"?`;\r\n                  return error;\r\n              });\r\n              Namespace.errorMessages.unexpectedOptions(errors);\r\n          }\r\n          Object.keys(provided).filter(key => key !== '__proto__' && key !== 'constructor').forEach((key) => {\r\n              path += `.${key}`;\r\n              if (path.charAt(0) === '.')\r\n                  path = path.slice(1);\r\n              const defaultOptionValue = defaultOptions[key];\r\n              let providedType = typeof provided[key];\r\n              let defaultType = typeof defaultOptionValue;\r\n              let value = provided[key];\r\n              if (value === undefined || value === null) {\r\n                  copyTo[key] = value;\r\n                  path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                  return;\r\n              }\r\n              if (typeof defaultOptionValue === 'object' &&\r\n                  !Array.isArray(provided[key]) &&\r\n                  !(defaultOptionValue instanceof Date || OptionConverter.ignoreProperties.includes(key))) {\r\n                  OptionConverter.spread(provided[key], copyTo[key], path, localization);\r\n              }\r\n              else {\r\n                  copyTo[key] = OptionConverter.processKey(key, value, providedType, defaultType, path, localization);\r\n              }\r\n              path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n          });\r\n      }\r\n      static processKey(key, value, providedType, defaultType, path, localization) {\r\n          switch (key) {\r\n              case 'defaultDate': {\r\n                  const dateTime = this.dateConversion(value, 'defaultDate', localization);\r\n                  if (dateTime !== undefined) {\r\n                      dateTime.setLocale(localization.locale);\r\n                      return dateTime;\r\n                  }\r\n                  Namespace.errorMessages.typeMismatch('defaultDate', providedType, 'DateTime or Date');\r\n                  break;\r\n              }\r\n              case 'viewDate': {\r\n                  const dateTime = this.dateConversion(value, 'viewDate', localization);\r\n                  if (dateTime !== undefined) {\r\n                      dateTime.setLocale(localization.locale);\r\n                      return dateTime;\r\n                  }\r\n                  Namespace.errorMessages.typeMismatch('viewDate', providedType, 'DateTime or Date');\r\n                  break;\r\n              }\r\n              case 'minDate': {\r\n                  if (value === undefined) {\r\n                      return value;\r\n                  }\r\n                  const dateTime = this.dateConversion(value, 'restrictions.minDate', localization);\r\n                  if (dateTime !== undefined) {\r\n                      dateTime.setLocale(localization.locale);\r\n                      return dateTime;\r\n                  }\r\n                  Namespace.errorMessages.typeMismatch('restrictions.minDate', providedType, 'DateTime or Date');\r\n                  break;\r\n              }\r\n              case 'maxDate': {\r\n                  if (value === undefined) {\r\n                      return value;\r\n                  }\r\n                  const dateTime = this.dateConversion(value, 'restrictions.maxDate', localization);\r\n                  if (dateTime !== undefined) {\r\n                      dateTime.setLocale(localization.locale);\r\n                      return dateTime;\r\n                  }\r\n                  Namespace.errorMessages.typeMismatch('restrictions.maxDate', providedType, 'DateTime or Date');\r\n                  break;\r\n              }\r\n              case 'disabledHours':\r\n                  if (value === undefined) {\r\n                      return [];\r\n                  }\r\n                  this._typeCheckNumberArray('restrictions.disabledHours', value, providedType);\r\n                  if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                      Namespace.errorMessages.numbersOutOfRange('restrictions.disabledHours', 0, 23);\r\n                  return value;\r\n              case 'enabledHours':\r\n                  if (value === undefined) {\r\n                      return [];\r\n                  }\r\n                  this._typeCheckNumberArray('restrictions.enabledHours', value, providedType);\r\n                  if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                      Namespace.errorMessages.numbersOutOfRange('restrictions.enabledHours', 0, 23);\r\n                  return value;\r\n              case 'daysOfWeekDisabled':\r\n                  if (value === undefined) {\r\n                      return [];\r\n                  }\r\n                  this._typeCheckNumberArray('restrictions.daysOfWeekDisabled', value, providedType);\r\n                  if (value.filter((x) => x < 0 || x > 6).length > 0)\r\n                      Namespace.errorMessages.numbersOutOfRange('restrictions.daysOfWeekDisabled', 0, 6);\r\n                  return value;\r\n              case 'enabledDates':\r\n                  if (value === undefined) {\r\n                      return [];\r\n                  }\r\n                  this._typeCheckDateArray('restrictions.enabledDates', value, providedType, localization);\r\n                  return value;\r\n              case 'disabledDates':\r\n                  if (value === undefined) {\r\n                      return [];\r\n                  }\r\n                  this._typeCheckDateArray('restrictions.disabledDates', value, providedType, localization);\r\n                  return value;\r\n              case 'disabledTimeIntervals':\r\n                  if (value === undefined) {\r\n                      return [];\r\n                  }\r\n                  if (!Array.isArray(value)) {\r\n                      Namespace.errorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n                  }\r\n                  const valueObject = value;\r\n                  for (let i = 0; i < valueObject.length; i++) {\r\n                      Object.keys(valueObject[i]).forEach((vk) => {\r\n                          const subOptionName = `${key}[${i}].${vk}`;\r\n                          let d = valueObject[i][vk];\r\n                          const dateTime = this.dateConversion(d, subOptionName, localization);\r\n                          if (!dateTime) {\r\n                              Namespace.errorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                          }\r\n                          dateTime.setLocale(localization.locale);\r\n                          valueObject[i][vk] = dateTime;\r\n                      });\r\n                  }\r\n                  return valueObject;\r\n              case 'toolbarPlacement':\r\n              case 'type':\r\n              case 'viewMode':\r\n              case 'theme':\r\n                  const optionValues = {\r\n                      toolbarPlacement: ['top', 'bottom', 'default'],\r\n                      type: ['icons', 'sprites'],\r\n                      viewMode: ['clock', 'calendar', 'months', 'years', 'decades'],\r\n                      theme: ['light', 'dark', 'auto']\r\n                  };\r\n                  const keyOptions = optionValues[key];\r\n                  if (!keyOptions.includes(value))\r\n                      Namespace.errorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n                  return value;\r\n              case 'meta':\r\n              case 'dayViewHeaderFormat':\r\n                  return value;\r\n              case 'container':\r\n                  if (value &&\r\n                      !(value instanceof HTMLElement ||\r\n                          value instanceof Element ||\r\n                          value?.appendChild)) {\r\n                      Namespace.errorMessages.typeMismatch(path.substring(1), typeof value, 'HTMLElement');\r\n                  }\r\n                  return value;\r\n              case 'useTwentyfourHour':\r\n                  if (value === undefined || providedType === 'boolean')\r\n                      return value;\r\n                  Namespace.errorMessages.typeMismatch(path, providedType, defaultType);\r\n                  break;\r\n              default:\r\n                  switch (defaultType) {\r\n                      case 'boolean':\r\n                          return value === 'true' || value === true;\r\n                      case 'number':\r\n                          return +value;\r\n                      case 'string':\r\n                          return value.toString();\r\n                      case 'object':\r\n                          return {};\r\n                      case 'function':\r\n                          return value;\r\n                      default:\r\n                          Namespace.errorMessages.typeMismatch(path, providedType, defaultType);\r\n                  }\r\n          }\r\n      }\r\n      static _mergeOptions(providedOptions, mergeTo) {\r\n          const newConfig = OptionConverter.deepCopy(mergeTo);\r\n          //see if the options specify a locale\r\n          const localization = mergeTo.localization?.locale !== 'default'\r\n              ? mergeTo.localization\r\n              : providedOptions?.localization || DefaultOptions.localization;\r\n          OptionConverter.spread(providedOptions, newConfig, '', localization);\r\n          return newConfig;\r\n      }\r\n      static _dataToOptions(element, options) {\r\n          const eData = JSON.parse(JSON.stringify(element.dataset));\r\n          if (eData?.tdTargetInput)\r\n              delete eData.tdTargetInput;\r\n          if (eData?.tdTargetToggle)\r\n              delete eData.tdTargetToggle;\r\n          if (!eData ||\r\n              Object.keys(eData).length === 0 ||\r\n              eData.constructor !== DOMStringMap)\r\n              return options;\r\n          let dataOptions = {};\r\n          // because dataset returns camelCase including the 'td' key the option\r\n          // key won't align\r\n          const objectToNormalized = (object) => {\r\n              const lowered = {};\r\n              Object.keys(object).forEach((x) => {\r\n                  lowered[x.toLowerCase()] = x;\r\n              });\r\n              return lowered;\r\n          };\r\n          const rabbitHole = (split, index, optionSubgroup, value) => {\r\n              // first round = display { ... }\r\n              const normalizedOptions = objectToNormalized(optionSubgroup);\r\n              const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n              const internalObject = {};\r\n              if (keyOption === undefined)\r\n                  return internalObject;\r\n              // if this is another object, continue down the rabbit hole\r\n              if (optionSubgroup[keyOption].constructor === Object) {\r\n                  index++;\r\n                  internalObject[keyOption] = rabbitHole(split, index, optionSubgroup[keyOption], value);\r\n              }\r\n              else {\r\n                  internalObject[keyOption] = value;\r\n              }\r\n              return internalObject;\r\n          };\r\n          const optionsLower = objectToNormalized(options);\r\n          Object.keys(eData)\r\n              .filter((x) => x.startsWith(Namespace.dataKey))\r\n              .map((x) => x.substring(2))\r\n              .forEach((key) => {\r\n              let keyOption = optionsLower[key.toLowerCase()];\r\n              // dataset merges dashes to camelCase... yay\r\n              // i.e. key = display_components_seconds\r\n              if (key.includes('_')) {\r\n                  // [display, components, seconds]\r\n                  const split = key.split('_');\r\n                  // display\r\n                  keyOption = optionsLower[split[0].toLowerCase()];\r\n                  if (keyOption !== undefined &&\r\n                      options[keyOption].constructor === Object) {\r\n                      dataOptions[keyOption] = rabbitHole(split, 1, options[keyOption], eData[`td${key}`]);\r\n                  }\r\n              }\r\n              // or key = multipleDate\r\n              else if (keyOption !== undefined) {\r\n                  dataOptions[keyOption] = eData[`td${key}`];\r\n              }\r\n          });\r\n          return this._mergeOptions(dataOptions, options);\r\n      }\r\n      /**\r\n       * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n       * @param d If a string will attempt creating a date from it.\r\n     * @param localization object containing locale and format settings. Only used with the custom formats\r\n       * @private\r\n       */\r\n      static _dateTypeCheck(d, localization) {\r\n          if (d.constructor.name === DateTime.name)\r\n              return d;\r\n          if (d.constructor.name === Date.name) {\r\n              return DateTime.convert(d);\r\n          }\r\n          if (typeof d === typeof '') {\r\n              const dateTime = DateTime.fromString(d, localization);\r\n              if (JSON.stringify(dateTime) === 'null') {\r\n                  return null;\r\n              }\r\n              return dateTime;\r\n          }\r\n          return null;\r\n      }\r\n      /**\r\n       * Type checks that `value` is an array of Date or DateTime\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param value Option value\r\n       * @param providedType Used to provide text to error messages\r\n     * @param localization\r\n       */\r\n      static _typeCheckDateArray(optionName, value, providedType, localization) {\r\n          if (!Array.isArray(value)) {\r\n              Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n          }\r\n          for (let i = 0; i < value.length; i++) {\r\n              let d = value[i];\r\n              const dateTime = this.dateConversion(d, optionName, localization);\r\n              if (!dateTime) {\r\n                  Namespace.errorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n              }\r\n              dateTime.setLocale(localization?.locale ?? 'default');\r\n              value[i] = dateTime;\r\n          }\r\n      }\r\n      /**\r\n       * Type checks that `value` is an array of numbers\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param value Option value\r\n       * @param providedType Used to provide text to error messages\r\n       */\r\n      static _typeCheckNumberArray(optionName, value, providedType) {\r\n          if (!Array.isArray(value) || value.find((x) => typeof x !== typeof 0)) {\r\n              Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n          }\r\n      }\r\n      /**\r\n       * Attempts to convert `d` to a DateTime object\r\n       * @param d value to convert\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n     * @param localization object containing locale and format settings. Only used with the custom formats\r\n       */\r\n      static dateConversion(d, optionName, localization) {\r\n          if (typeof d === typeof '' && optionName !== 'input') {\r\n              Namespace.errorMessages.dateString();\r\n          }\r\n          const converted = this._dateTypeCheck(d, localization);\r\n          if (!converted) {\r\n              Namespace.errorMessages.failedToParseDate(optionName, d, optionName === 'input');\r\n          }\r\n          return converted;\r\n      }\r\n      static getFlattenDefaultOptions() {\r\n          if (this._flattenDefaults)\r\n              return this._flattenDefaults;\r\n          const deepKeys = (t, pre = []) => {\r\n              if (Array.isArray(t))\r\n                  return [];\r\n              if (Object(t) === t) {\r\n                  return Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]));\r\n              }\r\n              else {\r\n                  return pre.join('.');\r\n              }\r\n          };\r\n          this._flattenDefaults = deepKeys(DefaultOptions);\r\n          return this._flattenDefaults;\r\n      }\r\n      /**\r\n       * Some options conflict like min/max date. Verify that these kinds of options\r\n       * are set correctly.\r\n       * @param config\r\n       */\r\n      static _validateConflicts(config) {\r\n          if (config.display.sideBySide &&\r\n              (!config.display.components.clock ||\r\n                  !(config.display.components.hours ||\r\n                      config.display.components.minutes ||\r\n                      config.display.components.seconds))) {\r\n              Namespace.errorMessages.conflictingConfiguration('Cannot use side by side mode without the clock components');\r\n          }\r\n          if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n              if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                  Namespace.errorMessages.conflictingConfiguration('minDate is after maxDate');\r\n              }\r\n              if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                  Namespace.errorMessages.conflictingConfiguration('maxDate is before minDate');\r\n              }\r\n          }\r\n      }\r\n  }\r\n  OptionConverter.ignoreProperties = ['meta', 'dayViewHeaderFormat',\r\n      'container', 'dateForms', 'ordinal'];\r\n  OptionConverter.isValue = a => a != null; // everything except undefined + null\n\n  class Dates {\r\n      constructor() {\r\n          this._dates = [];\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n      }\r\n      /**\r\n       * Returns the array of selected dates\r\n       */\r\n      get picked() {\r\n          return this._dates;\r\n      }\r\n      /**\r\n       * Returns the last picked value.\r\n       */\r\n      get lastPicked() {\r\n          return this._dates[this.lastPickedIndex];\r\n      }\r\n      /**\r\n       * Returns the length of picked dates -1 or 0 if none are selected.\r\n       */\r\n      get lastPickedIndex() {\r\n          if (this._dates.length === 0)\r\n              return 0;\r\n          return this._dates.length - 1;\r\n      }\r\n      /**\r\n       * Formats a DateTime object to a string. Used when setting the input value.\r\n       * @param date\r\n       */\r\n      formatInput(date) {\r\n          const components = this.optionsStore.options.display.components;\r\n          if (!date)\r\n              return '';\r\n          return date.format({\r\n              year: components.calendar && components.year ? 'numeric' : undefined,\r\n              month: components.calendar && components.month ? '2-digit' : undefined,\r\n              day: components.calendar && components.date ? '2-digit' : undefined,\r\n              hour: components.clock && components.hours\r\n                  ? components.useTwentyfourHour\r\n                      ? '2-digit'\r\n                      : 'numeric'\r\n                  : undefined,\r\n              minute: components.clock && components.minutes ? '2-digit' : undefined,\r\n              second: components.clock && components.seconds ? '2-digit' : undefined,\r\n              hour12: !components.useTwentyfourHour,\r\n          });\r\n      }\r\n      /**\r\n       * parse the value into a DateTime object.\r\n       * this can be overwritten to supply your own parsing.\r\n       */\r\n      parseInput(value) {\r\n          return OptionConverter.dateConversion(value, 'input', this.optionsStore.options.localization);\r\n      }\r\n      /**\r\n       * Tries to convert the provided value to a DateTime object.\r\n       * If value is null|undefined then clear the value of the provided index (or 0).\r\n       * @param value Value to convert or null|undefined\r\n       * @param index When using multidates this is the index in the array\r\n       */\r\n      setFromInput(value, index) {\r\n          if (!value) {\r\n              this.setValue(undefined, index);\r\n              return;\r\n          }\r\n          const converted = this.parseInput(value);\r\n          if (converted) {\r\n              converted.setLocale(this.optionsStore.options.localization.locale);\r\n              this.setValue(converted, index);\r\n          }\r\n      }\r\n      /**\r\n       * Adds a new DateTime to selected dates array\r\n       * @param date\r\n       */\r\n      add(date) {\r\n          this._dates.push(date);\r\n      }\r\n      /**\r\n       * Returns true if the `targetDate` is part of the selected dates array.\r\n       * If `unit` is provided then a granularity to that unit will be used.\r\n       * @param targetDate\r\n       * @param unit\r\n       */\r\n      isPicked(targetDate, unit) {\r\n          if (!unit)\r\n              return this._dates.find((x) => x === targetDate) !== undefined;\r\n          const format = getFormatByUnit(unit);\r\n          let innerDateFormatted = targetDate.format(format);\r\n          return (this._dates\r\n              .map((x) => x.format(format))\r\n              .find((x) => x === innerDateFormatted) !== undefined);\r\n      }\r\n      /**\r\n       * Returns the index at which `targetDate` is in the array.\r\n       * This is used for updating or removing a date when multi-date is used\r\n       * If `unit` is provided then a granularity to that unit will be used.\r\n       * @param targetDate\r\n       * @param unit\r\n       */\r\n      pickedIndex(targetDate, unit) {\r\n          if (!unit)\r\n              return this._dates.indexOf(targetDate);\r\n          const format = getFormatByUnit(unit);\r\n          let innerDateFormatted = targetDate.format(format);\r\n          return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n      }\r\n      /**\r\n       * Clears all selected dates.\r\n       */\r\n      clear() {\r\n          this.optionsStore.unset = true;\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.change,\r\n              date: undefined,\r\n              oldDate: this.lastPicked,\r\n              isClear: true,\r\n              isValid: true,\r\n          });\r\n          this._dates = [];\r\n      }\r\n      /**\r\n       * Find the \"book end\" years given a `year` and a `factor`\r\n       * @param factor e.g. 100 for decades\r\n       * @param year e.g. 2021\r\n       */\r\n      static getStartEndYear(factor, year) {\r\n          const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n          return [startYear, endYear, focusValue];\r\n      }\r\n      /**\r\n       * Attempts to either clear or set the `target` date at `index`.\r\n       * If the `target` is null then the date will be cleared.\r\n       * If multi-date is being used then it will be removed from the array.\r\n       * If `target` is valid and multi-date is used then if `index` is\r\n       * provided the date at that index will be replaced, otherwise it is appended.\r\n       * @param target\r\n       * @param index\r\n       */\r\n      setValue(target, index) {\r\n          const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n          let oldDate = this.optionsStore.unset ? null : this._dates[index];\r\n          if (!oldDate && !this.optionsStore.unset && noIndex && isClear) {\r\n              oldDate = this.lastPicked;\r\n          }\r\n          const updateInput = () => {\r\n              if (!this.optionsStore.input)\r\n                  return;\r\n              let newValue = this.formatInput(target);\r\n              if (this.optionsStore.options.multipleDates) {\r\n                  newValue = this._dates\r\n                      .map((d) => this.formatInput(d))\r\n                      .join(this.optionsStore.options.multipleDatesSeparator);\r\n              }\r\n              if (this.optionsStore.input.value != newValue)\r\n                  this.optionsStore.input.value = newValue;\r\n          };\r\n          if (target && oldDate?.isSame(target)) {\r\n              updateInput();\r\n              return;\r\n          }\r\n          // case of calling setValue(null)\r\n          if (!target) {\r\n              if (!this.optionsStore.options.multipleDates ||\r\n                  this._dates.length === 1 ||\r\n                  isClear) {\r\n                  this.optionsStore.unset = true;\r\n                  this._dates = [];\r\n              }\r\n              else {\r\n                  this._dates.splice(index, 1);\r\n              }\r\n              updateInput();\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: undefined,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: true,\r\n              });\r\n              this._eventEmitters.updateDisplay.emit('all');\r\n              return;\r\n          }\r\n          index = index || 0;\r\n          target = target.clone;\r\n          // minute stepping is being used, force the minute to the closest value\r\n          if (this.optionsStore.options.stepping !== 1) {\r\n              target.minutes =\r\n                  Math.round(target.minutes / this.optionsStore.options.stepping) *\r\n                      this.optionsStore.options.stepping;\r\n              target.seconds = 0;\r\n          }\r\n          if (this.validation.isValid(target)) {\r\n              this._dates[index] = target;\r\n              this.optionsStore.viewDate = target.clone;\r\n              updateInput();\r\n              this.optionsStore.unset = false;\r\n              this._eventEmitters.updateDisplay.emit('all');\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: target,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: true,\r\n              });\r\n              return;\r\n          }\r\n          if (this.optionsStore.options.keepInvalid) {\r\n              this._dates[index] = target;\r\n              this.optionsStore.viewDate = target.clone;\r\n              updateInput();\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: target,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: false,\r\n              });\r\n          }\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.error,\r\n              reason: Namespace.errorMessages.failedToSetInvalidDate,\r\n              date: target,\r\n              oldDate,\r\n          });\r\n      }\r\n  }\n\n  var ActionTypes;\r\n  (function (ActionTypes) {\r\n      ActionTypes[\"next\"] = \"next\";\r\n      ActionTypes[\"previous\"] = \"previous\";\r\n      ActionTypes[\"changeCalendarView\"] = \"changeCalendarView\";\r\n      ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n      ActionTypes[\"selectYear\"] = \"selectYear\";\r\n      ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n      ActionTypes[\"selectDay\"] = \"selectDay\";\r\n      ActionTypes[\"selectHour\"] = \"selectHour\";\r\n      ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n      ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n      ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n      ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n      ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n      ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n      ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n      ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n      ActionTypes[\"toggleMeridiem\"] = \"toggleMeridiem\";\r\n      ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n      ActionTypes[\"showClock\"] = \"showClock\";\r\n      ActionTypes[\"showHours\"] = \"showHours\";\r\n      ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n      ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n      ActionTypes[\"clear\"] = \"clear\";\r\n      ActionTypes[\"close\"] = \"close\";\r\n      ActionTypes[\"today\"] = \"today\";\r\n  })(ActionTypes || (ActionTypes = {}));\r\n  var ActionTypes$1 = ActionTypes;\n\n  /**\r\n   * Creates and updates the grid for `date`\r\n   */\r\n  class DateDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement(\"div\");\r\n          container.classList.add(Namespace.css.daysContainer);\r\n          container.append(...this._daysOfTheWeek());\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              const div = document.createElement(\"div\");\r\n              div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n              container.appendChild(div);\r\n          }\r\n          for (let i = 0; i < 42; i++) {\r\n              if (i !== 0 && i % 7 === 0) {\r\n                  if (this.optionsStore.options.display.calendarWeeks) {\r\n                      const div = document.createElement(\"div\");\r\n                      div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                      container.appendChild(div);\r\n                  }\r\n              }\r\n              const div = document.createElement(\"div\");\r\n              div.setAttribute(\"data-action\", ActionTypes$1.selectDay);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.daysContainer)[0];\r\n          if (this.optionsStore.currentView === \"calendar\") {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName(\"div\");\r\n              switcher.setAttribute(Namespace.css.daysContainer, this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));\r\n              this.optionsStore.options.display.components.month\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          let innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(Unit.month)\r\n              .startOf(\"weekDay\", this.optionsStore.options.localization.startOfTheWeek)\r\n              .manipulate(12, Unit.hours);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectDay}\"], .${Namespace.css.calendarWeeks}`)\r\n              .forEach((containerClone) => {\r\n              if (this.optionsStore.options.display.calendarWeeks &&\r\n                  containerClone.classList.contains(Namespace.css.calendarWeeks)) {\r\n                  if (containerClone.innerText === \"#\")\r\n                      return;\r\n                  containerClone.innerText = `${innerDate.week}`;\r\n                  return;\r\n              }\r\n              let classes = [];\r\n              classes.push(Namespace.css.day);\r\n              if (innerDate.isBefore(this.optionsStore.viewDate, Unit.month)) {\r\n                  classes.push(Namespace.css.old);\r\n              }\r\n              if (innerDate.isAfter(this.optionsStore.viewDate, Unit.month)) {\r\n                  classes.push(Namespace.css.new);\r\n              }\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.date)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.date)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                  classes.push(Namespace.css.today);\r\n              }\r\n              if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                  classes.push(Namespace.css.weekend);\r\n              }\r\n              paint(Unit.date, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute(\"data-value\", `${innerDate.year}-${innerDate.monthFormatted}-${innerDate.dateFormatted}`);\r\n              containerClone.setAttribute(\"data-day\", `${innerDate.date}`);\r\n              containerClone.innerText = innerDate.format({ day: \"numeric\" });\r\n              innerDate.manipulate(1, Unit.date);\r\n          });\r\n      }\r\n      /***\r\n       * Generates an html row that contains the days of the week.\r\n       * @private\r\n       */\r\n      _daysOfTheWeek() {\r\n          let innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(\"weekDay\", this.optionsStore.options.localization.startOfTheWeek)\r\n              .startOf(Unit.date);\r\n          const row = [];\r\n          document.createElement(\"div\");\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              const htmlDivElement = document.createElement(\"div\");\r\n              htmlDivElement.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n              htmlDivElement.innerText = \"#\";\r\n              row.push(htmlDivElement);\r\n          }\r\n          for (let i = 0; i < 7; i++) {\r\n              const htmlDivElement = document.createElement(\"div\");\r\n              htmlDivElement.classList.add(Namespace.css.dayOfTheWeek, Namespace.css.noHighlight);\r\n              htmlDivElement.innerText = innerDate.format({ weekday: \"short\" });\r\n              innerDate.manipulate(1, Unit.date);\r\n              row.push(htmlDivElement);\r\n          }\r\n          return row;\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `month`\r\n   */\r\n  class MonthDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.monthsContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectMonth);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.monthsContainer)[0];\r\n          if (this.optionsStore.currentView === 'months') {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName('div');\r\n              switcher.setAttribute(Namespace.css.monthsContainer, this.optionsStore.viewDate.format({ year: 'numeric' }));\r\n              this.optionsStore.options.display.components.year\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectMonth}\"]`)\r\n              .forEach((containerClone, index) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.month);\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.month)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.month)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.month, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${index}`);\r\n              containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n              innerDate.manipulate(1, Unit.month);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `year`\r\n   */\r\n  class YearDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement(\"div\");\r\n          container.classList.add(Namespace.css.yearsContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement(\"div\");\r\n              div.setAttribute(\"data-action\", ActionTypes$1.selectYear);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          this._startYear = this.optionsStore.viewDate.clone.manipulate(-1, Unit.year);\r\n          this._endYear = this.optionsStore.viewDate.clone.manipulate(10, Unit.year);\r\n          const container = widget.getElementsByClassName(Namespace.css.yearsContainer)[0];\r\n          if (this.optionsStore.currentView === \"years\") {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName(\"div\");\r\n              switcher.setAttribute(Namespace.css.yearsContainer, `${this._startYear.format({ year: \"numeric\" })}-${this._endYear.format({ year: \"numeric\" })}`);\r\n              this.optionsStore.options.display.components.decades\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._startYear, Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._endYear, Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          let innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(Unit.year)\r\n              .manipulate(-1, Unit.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectYear}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.year);\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.year)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.year)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.year, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute(\"data-value\", `${innerDate.year}`);\r\n              containerClone.innerText = innerDate.format({ year: \"numeric\" });\r\n              innerDate.manipulate(1, Unit.year);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `seconds`\r\n   */\r\n  class DecadeDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement(\"div\");\r\n          container.classList.add(Namespace.css.decadesContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement(\"div\");\r\n              div.setAttribute(\"data-action\", ActionTypes$1.selectDecade);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const [start, end] = Dates.getStartEndYear(100, this.optionsStore.viewDate.year);\r\n          this._startDecade = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          this._startDecade.year = start;\r\n          this._endDecade = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          this._endDecade.year = end;\r\n          const container = widget.getElementsByClassName(Namespace.css.decadesContainer)[0];\r\n          const [previous, switcher, next] = container.parentElement\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName(\"div\");\r\n          if (this.optionsStore.currentView === 'decades') {\r\n              switcher.setAttribute(Namespace.css.decadesContainer, `${this._startDecade.format({ year: \"numeric\" })}-${this._endDecade.format({ year: \"numeric\" })}`);\r\n              this.validation.isValid(this._startDecade, Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._endDecade, Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          const pickedYears = this.dates.picked.map((x) => x.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectDecade}\"]`)\r\n              .forEach((containerClone, index) => {\r\n              if (index === 0) {\r\n                  containerClone.classList.add(Namespace.css.old);\r\n                  if (this._startDecade.year - 10 < 0) {\r\n                      containerClone.textContent = \" \";\r\n                      previous.classList.add(Namespace.css.disabled);\r\n                      containerClone.classList.add(Namespace.css.disabled);\r\n                      containerClone.setAttribute(\"data-value\", ``);\r\n                      return;\r\n                  }\r\n                  else {\r\n                      containerClone.innerText = this._startDecade.clone.manipulate(-10, Unit.year).format({ year: \"numeric\" });\r\n                      containerClone.setAttribute(\"data-value\", `${this._startDecade.year}`);\r\n                      return;\r\n                  }\r\n              }\r\n              let classes = [];\r\n              classes.push(Namespace.css.decade);\r\n              const startDecadeYear = this._startDecade.year;\r\n              const endDecadeYear = this._startDecade.year + 9;\r\n              if (!this.optionsStore.unset &&\r\n                  pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                      .length > 0) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              paint(\"decade\", this._startDecade, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute(\"data-value\", `${this._startDecade.year}`);\r\n              containerClone.innerText = `${this._startDecade.format({ year: \"numeric\" })}`;\r\n              this._startDecade.manipulate(10, Unit.year);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates the clock display\r\n   */\r\n  class TimeDisplay {\r\n      constructor() {\r\n          this._gridColumns = '';\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the clock display\r\n       * @private\r\n       */\r\n      getPicker(iconTag) {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.clockContainer);\r\n          container.append(...this._grid(iconTag));\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the various elements with in the clock display\r\n       * like the current hour and if the manipulation icons are enabled.\r\n       * @private\r\n       */\r\n      _update(widget) {\r\n          const timesDiv = (widget.getElementsByClassName(Namespace.css.clockContainer)[0]);\r\n          const lastPicked = (this.dates.lastPicked || this.optionsStore.viewDate).clone;\r\n          timesDiv\r\n              .querySelectorAll('.disabled')\r\n              .forEach((element) => element.classList.remove(Namespace.css.disabled));\r\n          if (this.optionsStore.options.display.components.hours) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementHours}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementHours}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = this.optionsStore.options.display.components.useTwentyfourHour\r\n                  ? lastPicked.hoursFormatted\r\n                  : lastPicked.twelveHoursFormatted;\r\n          }\r\n          if (this.optionsStore.options.display.components.minutes) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementMinutes}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementMinutes}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked.minutesFormatted;\r\n          }\r\n          if (this.optionsStore.options.display.components.seconds) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementSeconds}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementSeconds}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked.secondsFormatted;\r\n          }\r\n          if (!this.optionsStore.options.display.components.useTwentyfourHour) {\r\n              const toggle = timesDiv.querySelector(`[data-action=${ActionTypes$1.toggleMeridiem}]`);\r\n              toggle.innerText = lastPicked.meridiem();\r\n              if (!this.validation.isValid(lastPicked.clone.manipulate(lastPicked.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                  toggle.classList.add(Namespace.css.disabled);\r\n              }\r\n              else {\r\n                  toggle.classList.remove(Namespace.css.disabled);\r\n              }\r\n          }\r\n          timesDiv.style.gridTemplateAreas = `\"${this._gridColumns}\"`;\r\n      }\r\n      /**\r\n       * Creates the table for the clock display depending on what options are selected.\r\n       * @private\r\n       */\r\n      _grid(iconTag) {\r\n          this._gridColumns = '';\r\n          const top = [], middle = [], bottom = [], separator = document.createElement('div'), upIcon = iconTag(this.optionsStore.options.display.icons.up), downIcon = iconTag(this.optionsStore.options.display.icons.down);\r\n          separator.classList.add(Namespace.css.separator, Namespace.css.noHighlight);\r\n          const separatorColon = separator.cloneNode(true);\r\n          separatorColon.innerHTML = ':';\r\n          const getSeparator = (colon = false) => {\r\n              return colon\r\n                  ? separatorColon.cloneNode(true)\r\n                  : separator.cloneNode(true);\r\n          };\r\n          if (this.optionsStore.options.display.components.hours) {\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementHours);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showHours);\r\n              divElement.setAttribute('data-time-component', Unit.hours);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementHours);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n              this._gridColumns += 'a';\r\n          }\r\n          if (this.optionsStore.options.display.components.minutes) {\r\n              this._gridColumns += ' a';\r\n              if (this.optionsStore.options.display.components.hours) {\r\n                  top.push(getSeparator());\r\n                  middle.push(getSeparator(true));\r\n                  bottom.push(getSeparator());\r\n                  this._gridColumns += ' a';\r\n              }\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementMinutes);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showMinutes);\r\n              divElement.setAttribute('data-time-component', Unit.minutes);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementMinutes);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n          }\r\n          if (this.optionsStore.options.display.components.seconds) {\r\n              this._gridColumns += ' a';\r\n              if (this.optionsStore.options.display.components.minutes) {\r\n                  top.push(getSeparator());\r\n                  middle.push(getSeparator(true));\r\n                  bottom.push(getSeparator());\r\n                  this._gridColumns += ' a';\r\n              }\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementSeconds);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showSeconds);\r\n              divElement.setAttribute('data-time-component', Unit.seconds);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementSeconds);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n          }\r\n          if (!this.optionsStore.options.display.components.useTwentyfourHour) {\r\n              this._gridColumns += ' a';\r\n              let divElement = getSeparator();\r\n              top.push(divElement);\r\n              let button = document.createElement('button');\r\n              button.setAttribute('title', this.optionsStore.options.localization.toggleMeridiem);\r\n              button.setAttribute('data-action', ActionTypes$1.toggleMeridiem);\r\n              button.setAttribute('tabindex', '-1');\r\n              if (Namespace.css.toggleMeridiem.includes(',')) { //todo move this to paint function?\r\n                  button.classList.add(...Namespace.css.toggleMeridiem.split(','));\r\n              }\r\n              else\r\n                  button.classList.add(Namespace.css.toggleMeridiem);\r\n              divElement = document.createElement('div');\r\n              divElement.classList.add(Namespace.css.noHighlight);\r\n              divElement.appendChild(button);\r\n              middle.push(divElement);\r\n              divElement = getSeparator();\r\n              bottom.push(divElement);\r\n          }\r\n          this._gridColumns = this._gridColumns.trim();\r\n          return [...top, ...middle, ...bottom];\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `hours`\r\n   */\r\n  class HourDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.hourContainer);\r\n          for (let i = 0; i <\r\n              (this.optionsStore.options.display.components.useTwentyfourHour ? 24 : 12); i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectHour);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.hourContainer)[0];\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.date);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectHour}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.hour);\r\n              if (!this.validation.isValid(innerDate, Unit.hours)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.hours, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n              containerClone.innerText = this.optionsStore.options.display.components\r\n                  .useTwentyfourHour\r\n                  ? innerDate.hoursFormatted\r\n                  : innerDate.twelveHoursFormatted;\r\n              innerDate.manipulate(1, Unit.hours);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `minutes`\r\n   */\r\n  class MinuteDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.minuteContainer);\r\n          let step = this.optionsStore.options.stepping === 1\r\n              ? 5\r\n              : this.optionsStore.options.stepping;\r\n          for (let i = 0; i < 60 / step; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectMinute);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.minuteContainer)[0];\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.hours);\r\n          let step = this.optionsStore.options.stepping === 1\r\n              ? 5\r\n              : this.optionsStore.options.stepping;\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectMinute}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.minute);\r\n              if (!this.validation.isValid(innerDate, Unit.minutes)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.minutes, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.minutes}`);\r\n              containerClone.innerText = innerDate.minutesFormatted;\r\n              innerDate.manipulate(step, Unit.minutes);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `seconds`\r\n   */\r\n  class secondDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.secondContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectSecond);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.secondContainer)[0];\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.minutes);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectSecond}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.second);\r\n              if (!this.validation.isValid(innerDate, Unit.seconds)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.seconds, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n              containerClone.innerText = innerDate.secondsFormatted;\r\n              innerDate.manipulate(5, Unit.seconds);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Provides a collapse functionality to the view changes\r\n   */\r\n  class Collapse {\r\n      /**\r\n       * Flips the show/hide state of `target`\r\n       * @param target html element to affect.\r\n       */\r\n      static toggle(target) {\r\n          if (target.classList.contains(Namespace.css.show)) {\r\n              this.hide(target);\r\n          }\r\n          else {\r\n              this.show(target);\r\n          }\r\n      }\r\n      /**\r\n       * Skips any animation or timeouts and immediately set the element to show.\r\n       * @param target\r\n       */\r\n      static showImmediately(target) {\r\n          target.classList.remove(Namespace.css.collapsing);\r\n          target.classList.add(Namespace.css.collapse, Namespace.css.show);\r\n          target.style.height = '';\r\n      }\r\n      /**\r\n       * If `target` is not already showing, then show after the animation.\r\n       * @param target\r\n       */\r\n      static show(target) {\r\n          if (target.classList.contains(Namespace.css.collapsing) ||\r\n              target.classList.contains(Namespace.css.show))\r\n              return;\r\n          const complete = () => {\r\n              Collapse.showImmediately(target);\r\n          };\r\n          target.style.height = '0';\r\n          target.classList.remove(Namespace.css.collapse);\r\n          target.classList.add(Namespace.css.collapsing);\r\n          setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n          target.style.height = `${target.scrollHeight}px`;\r\n      }\r\n      /**\r\n       * Skips any animation or timeouts and immediately set the element to hide.\r\n       * @param target\r\n       */\r\n      static hideImmediately(target) {\r\n          if (!target)\r\n              return;\r\n          target.classList.remove(Namespace.css.collapsing, Namespace.css.show);\r\n          target.classList.add(Namespace.css.collapse);\r\n      }\r\n      /**\r\n       * If `target` is not already hidden, then hide after the animation.\r\n       * @param target HTML Element\r\n       */\r\n      static hide(target) {\r\n          if (target.classList.contains(Namespace.css.collapsing) ||\r\n              !target.classList.contains(Namespace.css.show))\r\n              return;\r\n          const complete = () => {\r\n              Collapse.hideImmediately(target);\r\n          };\r\n          target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n          const reflow = (element) => element.offsetHeight;\r\n          reflow(target);\r\n          target.classList.remove(Namespace.css.collapse, Namespace.css.show);\r\n          target.classList.add(Namespace.css.collapsing);\r\n          target.style.height = '';\r\n          setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n      }\r\n  }\r\n  /**\r\n   * Gets the transition duration from the `element` by getting css properties\r\n   * `transition-duration` and `transition-delay`\r\n   * @param element HTML Element\r\n   */\r\n  Collapse.getTransitionDurationFromElement = (element) => {\r\n      if (!element) {\r\n          return 0;\r\n      }\r\n      // Get transition-duration of the element\r\n      let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n      const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n      const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n      // Return 0 if element or transition duration is not found\r\n      if (!floatTransitionDuration && !floatTransitionDelay) {\r\n          return 0;\r\n      }\r\n      // If multiple durations are defined, take the first\r\n      transitionDuration = transitionDuration.split(',')[0];\r\n      transitionDelay = transitionDelay.split(',')[0];\r\n      return ((Number.parseFloat(transitionDuration) +\r\n          Number.parseFloat(transitionDelay)) *\r\n          1000);\r\n  };\n\n  /**\r\n   * Main class for all things display related.\r\n   */\r\n  class Display {\r\n      constructor() {\r\n          this._isVisible = false;\r\n          /**\r\n           * A document click event to hide the widget if click is outside\r\n           * @private\r\n           * @param e MouseEvent\r\n           */\r\n          this._documentClickEvent = (e) => {\r\n              if (this.optionsStore.options.debug || window.debug)\r\n                  return;\r\n              if (this._isVisible &&\r\n                  !e.composedPath().includes(this.widget) && // click inside the widget\r\n                  !e.composedPath()?.includes(this.optionsStore.element) // click on the element\r\n              ) {\r\n                  this.hide();\r\n              }\r\n          };\r\n          /**\r\n           * Click event for any action like selecting a date\r\n           * @param e MouseEvent\r\n           * @private\r\n           */\r\n          this._actionsClickEvent = (e) => {\r\n              this._eventEmitters.action.emit({ e: e });\r\n          };\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.dateDisplay = serviceLocator.locate(DateDisplay);\r\n          this.monthDisplay = serviceLocator.locate(MonthDisplay);\r\n          this.yearDisplay = serviceLocator.locate(YearDisplay);\r\n          this.decadeDisplay = serviceLocator.locate(DecadeDisplay);\r\n          this.timeDisplay = serviceLocator.locate(TimeDisplay);\r\n          this.hourDisplay = serviceLocator.locate(HourDisplay);\r\n          this.minuteDisplay = serviceLocator.locate(MinuteDisplay);\r\n          this.secondDisplay = serviceLocator.locate(secondDisplay);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this._widget = undefined;\r\n          this._eventEmitters.updateDisplay.subscribe((result) => {\r\n              this._update(result);\r\n          });\r\n      }\r\n      /**\r\n       * Returns the widget body or undefined\r\n       * @private\r\n       */\r\n      get widget() {\r\n          return this._widget;\r\n      }\r\n      /**\r\n       * Returns this visible state of the picker (shown)\r\n       */\r\n      get isVisible() {\r\n          return this._isVisible;\r\n      }\r\n      /**\r\n       * Updates the table for a particular unit. Used when an option as changed or\r\n       * whenever the class list might need to be refreshed.\r\n       * @param unit\r\n       * @private\r\n       */\r\n      _update(unit) {\r\n          if (!this.widget)\r\n              return;\r\n          //todo do I want some kind of error catching or other guards here?\r\n          switch (unit) {\r\n              case Unit.seconds:\r\n                  this.secondDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.minutes:\r\n                  this.minuteDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.hours:\r\n                  this.hourDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.date:\r\n                  this.dateDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.month:\r\n                  this.monthDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.year:\r\n                  this.yearDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case 'clock':\r\n                  if (!this._hasTime)\r\n                      break;\r\n                  this.timeDisplay._update(this.widget);\r\n                  this._update(Unit.hours);\r\n                  this._update(Unit.minutes);\r\n                  this._update(Unit.seconds);\r\n                  break;\r\n              case 'calendar':\r\n                  this._update(Unit.date);\r\n                  this._update(Unit.year);\r\n                  this._update(Unit.month);\r\n                  this.decadeDisplay._update(this.widget, this.paint);\r\n                  this._updateCalendarHeader();\r\n                  break;\r\n              case 'all':\r\n                  if (this._hasTime) {\r\n                      this._update('clock');\r\n                  }\r\n                  if (this._hasDate) {\r\n                      this._update('calendar');\r\n                  }\r\n          }\r\n      }\r\n      // noinspection JSUnusedLocalSymbols\r\n      /**\r\n       * Allows developers to add/remove classes from an element.\r\n       * @param _unit\r\n       * @param _date\r\n       * @param _classes\r\n       * @param _element\r\n       */\r\n      paint(_unit, _date, _classes, _element) {\r\n          // implemented in plugin\r\n      }\r\n      /**\r\n       * Shows the picker and creates a Popper instance if needed.\r\n       * Add document click event to hide when clicking outside the picker.\r\n       * fires Events#show\r\n       */\r\n      show() {\r\n          if (this.widget == undefined) {\r\n              if (this.dates.picked.length == 0) {\r\n                  if (this.optionsStore.options.useCurrent &&\r\n                      !this.optionsStore.options.defaultDate) {\r\n                      const date = new DateTime().setLocale(this.optionsStore.options.localization.locale);\r\n                      if (!this.optionsStore.options.keepInvalid) {\r\n                          let tries = 0;\r\n                          let direction = 1;\r\n                          if (this.optionsStore.options.restrictions.maxDate?.isBefore(date)) {\r\n                              direction = -1;\r\n                          }\r\n                          while (!this.validation.isValid(date)) {\r\n                              date.manipulate(direction, Unit.date);\r\n                              if (tries > 31)\r\n                                  break;\r\n                              tries++;\r\n                          }\r\n                      }\r\n                      this.dates.setValue(date);\r\n                  }\r\n                  if (this.optionsStore.options.defaultDate) {\r\n                      this.dates.setValue(this.optionsStore.options.defaultDate);\r\n                  }\r\n              }\r\n              this._buildWidget();\r\n              this._updateTheme();\r\n              // If modeView is only clock\r\n              const onlyClock = this._hasTime && !this._hasDate;\r\n              // reset the view to the clock if there's no date components\r\n              if (onlyClock) {\r\n                  this.optionsStore.currentView = 'clock';\r\n                  this._eventEmitters.action.emit({\r\n                      e: null,\r\n                      action: ActionTypes$1.showClock,\r\n                  });\r\n              }\r\n              // otherwise return to the calendar view\r\n              if (!this.optionsStore.currentCalendarViewMode) {\r\n                  this.optionsStore.currentCalendarViewMode =\r\n                      this.optionsStore.minimumCalendarViewMode;\r\n              }\r\n              if (!onlyClock &&\r\n                  this.optionsStore.options.display.viewMode !== 'clock') {\r\n                  if (this._hasTime) {\r\n                      if (!this.optionsStore.options.display.sideBySide) {\r\n                          Collapse.hideImmediately(this.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                      }\r\n                      else {\r\n                          Collapse.show(this.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                      }\r\n                  }\r\n                  Collapse.show(this.widget.querySelector(`div.${Namespace.css.dateContainer}`));\r\n              }\r\n              if (this._hasDate) {\r\n                  this._showMode();\r\n              }\r\n              if (!this.optionsStore.options.display.inline) {\r\n                  // If needed to change the parent container\r\n                  const container = this.optionsStore.options?.container || document.body;\r\n                  container.appendChild(this.widget);\r\n                  this.createPopup(this.optionsStore.element, this.widget, {\r\n                      modifiers: [{ name: 'eventListeners', enabled: true }],\r\n                      //#2400\r\n                      placement: document.documentElement.dir === 'rtl'\r\n                          ? 'bottom-end'\r\n                          : 'bottom-start',\r\n                  }).then();\r\n              }\r\n              else {\r\n                  this.optionsStore.element.appendChild(this.widget);\r\n              }\r\n              if (this.optionsStore.options.display.viewMode == 'clock') {\r\n                  this._eventEmitters.action.emit({\r\n                      e: null,\r\n                      action: ActionTypes$1.showClock,\r\n                  });\r\n              }\r\n              this.widget\r\n                  .querySelectorAll('[data-action]')\r\n                  .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n              // show the clock when using sideBySide\r\n              if (this._hasTime && this.optionsStore.options.display.sideBySide) {\r\n                  this.timeDisplay._update(this.widget);\r\n                  this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display = 'grid';\r\n              }\r\n          }\r\n          this.widget.classList.add(Namespace.css.show);\r\n          if (!this.optionsStore.options.display.inline) {\r\n              this.updatePopup();\r\n              document.addEventListener('click', this._documentClickEvent);\r\n          }\r\n          this._eventEmitters.triggerEvent.emit({ type: Namespace.events.show });\r\n          this._isVisible = true;\r\n      }\r\n      async createPopup(element, widget, options) {\r\n          let createPopperFunction;\r\n          if (window?.Popper) {\r\n              createPopperFunction = window?.Popper?.createPopper;\r\n          }\r\n          else {\r\n              const { createPopper } = await import('@popperjs/core');\r\n              createPopperFunction = createPopper;\r\n          }\r\n          if (createPopperFunction) {\r\n              this._popperInstance = createPopperFunction(element, widget, options);\r\n          }\r\n      }\r\n      updatePopup() {\r\n          this._popperInstance?.update();\r\n      }\r\n      /**\r\n       * Changes the calendar view mode. E.g. month <-> year\r\n       * @param direction -/+ number to move currentViewMode\r\n       * @private\r\n       */\r\n      _showMode(direction) {\r\n          if (!this.widget) {\r\n              return;\r\n          }\r\n          if (direction) {\r\n              const max = Math.max(this.optionsStore.minimumCalendarViewMode, Math.min(3, this.optionsStore.currentCalendarViewMode + direction));\r\n              if (this.optionsStore.currentCalendarViewMode == max)\r\n                  return;\r\n              this.optionsStore.currentCalendarViewMode = max;\r\n          }\r\n          this.widget\r\n              .querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div:not(.${Namespace.css.clockContainer})`)\r\n              .forEach((e) => (e.style.display = 'none'));\r\n          const datePickerMode = CalendarModes[this.optionsStore.currentCalendarViewMode];\r\n          let picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n          switch (datePickerMode.className) {\r\n              case Namespace.css.decadesContainer:\r\n                  this.decadeDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.yearsContainer:\r\n                  this.yearDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.monthsContainer:\r\n                  this.monthDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.daysContainer:\r\n                  this.dateDisplay._update(this.widget, this.paint);\r\n                  break;\r\n          }\r\n          picker.style.display = 'grid';\r\n          this._updateCalendarHeader();\r\n          this._eventEmitters.viewUpdate.emit();\r\n      }\r\n      /**\r\n       * Changes the theme. E.g. light, dark or auto\r\n       * @param theme the theme name\r\n       * @private\r\n       */\r\n      _updateTheme(theme) {\r\n          if (!this.widget) {\r\n              return;\r\n          }\r\n          if (theme) {\r\n              if (this.optionsStore.options.display.theme === theme)\r\n                  return;\r\n              this.optionsStore.options.display.theme = theme;\r\n          }\r\n          this.widget.classList.remove('light', 'dark');\r\n          this.widget.classList.add(this._getThemeClass());\r\n          if (this.optionsStore.options.display.theme === 'auto') {\r\n              window\r\n                  .matchMedia(Namespace.css.isDarkPreferredQuery)\r\n                  .addEventListener('change', () => this._updateTheme());\r\n          }\r\n          else {\r\n              window\r\n                  .matchMedia(Namespace.css.isDarkPreferredQuery)\r\n                  .removeEventListener('change', () => this._updateTheme());\r\n          }\r\n      }\r\n      _getThemeClass() {\r\n          const currentTheme = this.optionsStore.options.display.theme || 'auto';\r\n          const isDarkMode = window.matchMedia &&\r\n              window.matchMedia(Namespace.css.isDarkPreferredQuery).matches;\r\n          switch (currentTheme) {\r\n              case 'light':\r\n                  return Namespace.css.lightTheme;\r\n              case 'dark':\r\n                  return Namespace.css.darkTheme;\r\n              case 'auto':\r\n                  return isDarkMode ? Namespace.css.darkTheme : Namespace.css.lightTheme;\r\n          }\r\n      }\r\n      _updateCalendarHeader() {\r\n          const showing = [\r\n              ...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*=\"display: grid\"]`).classList,\r\n          ].find((x) => x.startsWith(Namespace.css.dateContainer));\r\n          const [previous, switcher, next] = this.widget\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName('div');\r\n          switch (showing) {\r\n              case Namespace.css.decadesContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousCentury);\r\n                  switcher.setAttribute('title', '');\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextCentury);\r\n                  break;\r\n              case Namespace.css.yearsContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousDecade);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectDecade);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextDecade);\r\n                  break;\r\n              case Namespace.css.monthsContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousYear);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectYear);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextYear);\r\n                  break;\r\n              case Namespace.css.daysContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousMonth);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectMonth);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextMonth);\r\n                  switcher.innerText = this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat);\r\n                  break;\r\n          }\r\n          switcher.innerText = switcher.getAttribute(showing);\r\n      }\r\n      /**\r\n       * Hides the picker if needed.\r\n       * Remove document click event to hide when clicking outside the picker.\r\n       * fires Events#hide\r\n       */\r\n      hide() {\r\n          if (!this.widget || !this._isVisible)\r\n              return;\r\n          this.widget.classList.remove(Namespace.css.show);\r\n          if (this._isVisible) {\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.hide,\r\n                  date: this.optionsStore.unset\r\n                      ? null\r\n                      : this.dates.lastPicked\r\n                          ? this.dates.lastPicked.clone\r\n                          : void 0,\r\n              });\r\n              this._isVisible = false;\r\n          }\r\n          document.removeEventListener('click', this._documentClickEvent);\r\n      }\r\n      /**\r\n       * Toggles the picker's open state. Fires a show/hide event depending.\r\n       */\r\n      toggle() {\r\n          return this._isVisible ? this.hide() : this.show();\r\n      }\r\n      /**\r\n       * Removes document and data-action click listener and reset the widget\r\n       * @private\r\n       */\r\n      _dispose() {\r\n          document.removeEventListener('click', this._documentClickEvent);\r\n          if (!this.widget)\r\n              return;\r\n          this.widget\r\n              .querySelectorAll('[data-action]')\r\n              .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n          this.widget.parentNode.removeChild(this.widget);\r\n          this._widget = undefined;\r\n      }\r\n      /**\r\n       * Builds the widgets html template.\r\n       * @private\r\n       */\r\n      _buildWidget() {\r\n          const template = document.createElement('div');\r\n          template.classList.add(Namespace.css.widget);\r\n          const dateView = document.createElement('div');\r\n          dateView.classList.add(Namespace.css.dateContainer);\r\n          dateView.append(this.getHeadTemplate(), this.decadeDisplay.getPicker(), this.yearDisplay.getPicker(), this.monthDisplay.getPicker(), this.dateDisplay.getPicker());\r\n          const timeView = document.createElement('div');\r\n          timeView.classList.add(Namespace.css.timeContainer);\r\n          timeView.appendChild(this.timeDisplay.getPicker(this._iconTag.bind(this)));\r\n          timeView.appendChild(this.hourDisplay.getPicker());\r\n          timeView.appendChild(this.minuteDisplay.getPicker());\r\n          timeView.appendChild(this.secondDisplay.getPicker());\r\n          const toolbar = document.createElement('div');\r\n          toolbar.classList.add(Namespace.css.toolbar);\r\n          toolbar.append(...this.getToolbarElements());\r\n          if (this.optionsStore.options.display.inline) {\r\n              template.classList.add(Namespace.css.inline);\r\n          }\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              template.classList.add('calendarWeeks');\r\n          }\r\n          if (this.optionsStore.options.display.sideBySide &&\r\n              this._hasDate &&\r\n              this._hasTime) {\r\n              template.classList.add(Namespace.css.sideBySide);\r\n              if (this.optionsStore.options.display.toolbarPlacement === 'top') {\r\n                  template.appendChild(toolbar);\r\n              }\r\n              const row = document.createElement('div');\r\n              row.classList.add('td-row');\r\n              dateView.classList.add('td-half');\r\n              timeView.classList.add('td-half');\r\n              row.appendChild(dateView);\r\n              row.appendChild(timeView);\r\n              template.appendChild(row);\r\n              if (this.optionsStore.options.display.toolbarPlacement === 'bottom') {\r\n                  template.appendChild(toolbar);\r\n              }\r\n              this._widget = template;\r\n              return;\r\n          }\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'top') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          if (this._hasDate) {\r\n              if (this._hasTime) {\r\n                  dateView.classList.add(Namespace.css.collapse);\r\n                  if (this.optionsStore.options.display.viewMode !== 'clock')\r\n                      dateView.classList.add(Namespace.css.show);\r\n              }\r\n              template.appendChild(dateView);\r\n          }\r\n          if (this._hasTime) {\r\n              if (this._hasDate) {\r\n                  timeView.classList.add(Namespace.css.collapse);\r\n                  if (this.optionsStore.options.display.viewMode === 'clock')\r\n                      timeView.classList.add(Namespace.css.show);\r\n              }\r\n              template.appendChild(timeView);\r\n          }\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'bottom') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          const arrow = document.createElement('div');\r\n          arrow.classList.add('arrow');\r\n          arrow.setAttribute('data-popper-arrow', '');\r\n          template.appendChild(arrow);\r\n          this._widget = template;\r\n      }\r\n      /**\r\n       * Returns true if the hours, minutes, or seconds component is turned on\r\n       */\r\n      get _hasTime() {\r\n          return (this.optionsStore.options.display.components.clock &&\r\n              (this.optionsStore.options.display.components.hours ||\r\n                  this.optionsStore.options.display.components.minutes ||\r\n                  this.optionsStore.options.display.components.seconds));\r\n      }\r\n      /**\r\n       * Returns true if the year, month, or date component is turned on\r\n       */\r\n      get _hasDate() {\r\n          return (this.optionsStore.options.display.components.calendar &&\r\n              (this.optionsStore.options.display.components.year ||\r\n                  this.optionsStore.options.display.components.month ||\r\n                  this.optionsStore.options.display.components.date));\r\n      }\r\n      /**\r\n       * Get the toolbar html based on options like buttons.today\r\n       * @private\r\n       */\r\n      getToolbarElements() {\r\n          const toolbar = [];\r\n          if (this.optionsStore.options.display.buttons.today) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.today);\r\n              div.setAttribute('title', this.optionsStore.options.localization.today);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.today));\r\n              toolbar.push(div);\r\n          }\r\n          if (!this.optionsStore.options.display.sideBySide &&\r\n              this._hasDate &&\r\n              this._hasTime) {\r\n              let title, icon;\r\n              if (this.optionsStore.options.display.viewMode === 'clock') {\r\n                  title = this.optionsStore.options.localization.selectDate;\r\n                  icon = this.optionsStore.options.display.icons.date;\r\n              }\r\n              else {\r\n                  title = this.optionsStore.options.localization.selectTime;\r\n                  icon = this.optionsStore.options.display.icons.time;\r\n              }\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.togglePicker);\r\n              div.setAttribute('title', title);\r\n              div.appendChild(this._iconTag(icon));\r\n              toolbar.push(div);\r\n          }\r\n          if (this.optionsStore.options.display.buttons.clear) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.clear);\r\n              div.setAttribute('title', this.optionsStore.options.localization.clear);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.clear));\r\n              toolbar.push(div);\r\n          }\r\n          if (this.optionsStore.options.display.buttons.close) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.close);\r\n              div.setAttribute('title', this.optionsStore.options.localization.close);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.close));\r\n              toolbar.push(div);\r\n          }\r\n          return toolbar;\r\n      }\r\n      /***\r\n       * Builds the base header template with next and previous icons\r\n       * @private\r\n       */\r\n      getHeadTemplate() {\r\n          const calendarHeader = document.createElement('div');\r\n          calendarHeader.classList.add(Namespace.css.calendarHeader);\r\n          const previous = document.createElement('div');\r\n          previous.classList.add(Namespace.css.previous);\r\n          previous.setAttribute('data-action', ActionTypes$1.previous);\r\n          previous.appendChild(this._iconTag(this.optionsStore.options.display.icons[document.documentElement.dir === 'rtl' ? 'next' : 'previous']) //***\r\n          );\r\n          const switcher = document.createElement('div');\r\n          switcher.classList.add(Namespace.css.switch);\r\n          switcher.setAttribute('data-action', ActionTypes$1.changeCalendarView);\r\n          const next = document.createElement('div');\r\n          next.classList.add(Namespace.css.next);\r\n          next.setAttribute('data-action', ActionTypes$1.next);\r\n          next.appendChild(this._iconTag(this.optionsStore.options.display.icons[document.documentElement.dir === 'rtl' ? 'previous' : 'next']) //***\r\n          );\r\n          calendarHeader.append(previous, switcher, next);\r\n          return calendarHeader;\r\n      }\r\n      /**\r\n       * Builds an icon tag as either an `<i>`\r\n       * or with icons.type is `sprites` then a svg tag instead\r\n       * @param iconClass\r\n       * @private\r\n       */\r\n      _iconTag(iconClass) {\r\n          if (this.optionsStore.options.display.icons.type === 'sprites') {\r\n              const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n              const icon = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n              icon.setAttribute('xlink:href', iconClass); // Deprecated. Included for backward compatibility\r\n              icon.setAttribute('href', iconClass);\r\n              svg.appendChild(icon);\r\n              return svg;\r\n          }\r\n          const icon = document.createElement('i');\r\n          icon.classList.add(...iconClass.split(' '));\r\n          return icon;\r\n      }\r\n      /**\r\n       * Causes the widget to get rebuilt on next show. If the picker is already open\r\n       * then hide and reshow it.\r\n       * @private\r\n       */\r\n      _rebuild() {\r\n          const wasVisible = this._isVisible;\r\n          if (wasVisible)\r\n              this.hide();\r\n          this._dispose();\r\n          if (wasVisible) {\r\n              this.show();\r\n          }\r\n      }\r\n  }\n\n  /**\r\n   *\r\n   */\r\n  class Actions {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this.display = serviceLocator.locate(Display);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this._eventEmitters.action.subscribe((result) => {\r\n              this.do(result.e, result.action);\r\n          });\r\n      }\r\n      /**\r\n       * Performs the selected `action`. See ActionTypes\r\n       * @param e This is normally a click event\r\n       * @param action If not provided, then look for a [data-action]\r\n       */\r\n      do(e, action) {\r\n          const currentTarget = e?.currentTarget;\r\n          if (currentTarget?.classList?.contains(Namespace.css.disabled))\r\n              return false;\r\n          action = action || currentTarget?.dataset?.action;\r\n          const lastPicked = (this.dates.lastPicked || this.optionsStore.viewDate)\r\n              .clone;\r\n          switch (action) {\r\n              case ActionTypes$1.next:\r\n              case ActionTypes$1.previous:\r\n                  this.handleNextPrevious(action);\r\n                  break;\r\n              case ActionTypes$1.changeCalendarView:\r\n                  this.display._showMode(1);\r\n                  this.display._updateCalendarHeader();\r\n                  break;\r\n              case ActionTypes$1.selectMonth:\r\n              case ActionTypes$1.selectYear:\r\n              case ActionTypes$1.selectDecade:\r\n                  const value = +currentTarget.dataset.value;\r\n                  switch (action) {\r\n                      case ActionTypes$1.selectMonth:\r\n                          this.optionsStore.viewDate.month = value;\r\n                          break;\r\n                      case ActionTypes$1.selectYear:\r\n                      case ActionTypes$1.selectDecade:\r\n                          this.optionsStore.viewDate.year = value;\r\n                          break;\r\n                  }\r\n                  if (this.optionsStore.currentCalendarViewMode ===\r\n                      this.optionsStore.minimumCalendarViewMode) {\r\n                      this.dates.setValue(this.optionsStore.viewDate, this.dates.lastPickedIndex);\r\n                      if (!this.optionsStore.options.display.inline) {\r\n                          this.display.hide();\r\n                      }\r\n                  }\r\n                  else {\r\n                      this.display._showMode(-1);\r\n                  }\r\n                  break;\r\n              case ActionTypes$1.selectDay:\r\n                  const day = this.optionsStore.viewDate.clone;\r\n                  if (currentTarget.classList.contains(Namespace.css.old)) {\r\n                      day.manipulate(-1, Unit.month);\r\n                  }\r\n                  if (currentTarget.classList.contains(Namespace.css.new)) {\r\n                      day.manipulate(1, Unit.month);\r\n                  }\r\n                  day.date = +currentTarget.dataset.day;\r\n                  let index = 0;\r\n                  if (this.optionsStore.options.multipleDates) {\r\n                      index = this.dates.pickedIndex(day, Unit.date);\r\n                      if (index !== -1) {\r\n                          this.dates.setValue(null, index); //deselect multi-date\r\n                      }\r\n                      else {\r\n                          this.dates.setValue(day, this.dates.lastPickedIndex + 1);\r\n                      }\r\n                  }\r\n                  else {\r\n                      this.dates.setValue(day, this.dates.lastPickedIndex);\r\n                  }\r\n                  if (!this.display._hasTime &&\r\n                      !this.optionsStore.options.display.keepOpen &&\r\n                      !this.optionsStore.options.display.inline &&\r\n                      !this.optionsStore.options.multipleDates) {\r\n                      this.display.hide();\r\n                  }\r\n                  break;\r\n              case ActionTypes$1.selectHour:\r\n                  let hour = +currentTarget.dataset.value;\r\n                  if (lastPicked.hours >= 12 &&\r\n                      !this.optionsStore.options.display.components.useTwentyfourHour)\r\n                      hour += 12;\r\n                  lastPicked.hours = hour;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              case ActionTypes$1.selectMinute:\r\n                  lastPicked.minutes = +currentTarget.dataset.value;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              case ActionTypes$1.selectSecond:\r\n                  lastPicked.seconds = +currentTarget.dataset.value;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              case ActionTypes$1.incrementHours:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours);\r\n                  break;\r\n              case ActionTypes$1.incrementMinutes:\r\n                  this.manipulateAndSet(lastPicked, Unit.minutes, this.optionsStore.options.stepping);\r\n                  break;\r\n              case ActionTypes$1.incrementSeconds:\r\n                  this.manipulateAndSet(lastPicked, Unit.seconds);\r\n                  break;\r\n              case ActionTypes$1.decrementHours:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours, -1);\r\n                  break;\r\n              case ActionTypes$1.decrementMinutes:\r\n                  this.manipulateAndSet(lastPicked, Unit.minutes, this.optionsStore.options.stepping * -1);\r\n                  break;\r\n              case ActionTypes$1.decrementSeconds:\r\n                  this.manipulateAndSet(lastPicked, Unit.seconds, -1);\r\n                  break;\r\n              case ActionTypes$1.toggleMeridiem:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours, this.dates.lastPicked.hours >= 12 ? -12 : 12);\r\n                  break;\r\n              case ActionTypes$1.togglePicker:\r\n                  if (currentTarget.getAttribute('title') ===\r\n                      this.optionsStore.options.localization.selectDate) {\r\n                      currentTarget.setAttribute('title', this.optionsStore.options.localization.selectTime);\r\n                      currentTarget.innerHTML = this.display._iconTag(this.optionsStore.options.display.icons.time).outerHTML;\r\n                      this.display._updateCalendarHeader();\r\n                      this.optionsStore.refreshCurrentView();\r\n                  }\r\n                  else {\r\n                      currentTarget.setAttribute('title', this.optionsStore.options.localization.selectDate);\r\n                      currentTarget.innerHTML = this.display._iconTag(this.optionsStore.options.display.icons.date).outerHTML;\r\n                      if (this.display._hasTime) {\r\n                          this.handleShowClockContainers(ActionTypes$1.showClock);\r\n                          this.display._update('clock');\r\n                      }\r\n                  }\r\n                  this.display.widget\r\n                      .querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`)\r\n                      .forEach((htmlElement) => Collapse.toggle(htmlElement));\r\n                  this._eventEmitters.viewUpdate.emit();\r\n                  break;\r\n              case ActionTypes$1.showClock:\r\n              case ActionTypes$1.showHours:\r\n              case ActionTypes$1.showMinutes:\r\n              case ActionTypes$1.showSeconds:\r\n                  //make sure the clock is actually displaying\r\n                  if (!this.optionsStore.options.display.sideBySide && this.optionsStore.currentView !== 'clock') {\r\n                      //hide calendar\r\n                      Collapse.hideImmediately(this.display.widget.querySelector(`div.${Namespace.css.dateContainer}`));\r\n                      //show clock\r\n                      Collapse.showImmediately(this.display.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                  }\r\n                  this.handleShowClockContainers(action);\r\n                  break;\r\n              case ActionTypes$1.clear:\r\n                  this.dates.setValue(null);\r\n                  this.display._updateCalendarHeader();\r\n                  break;\r\n              case ActionTypes$1.close:\r\n                  this.display.hide();\r\n                  break;\r\n              case ActionTypes$1.today:\r\n                  const today = new DateTime().setLocale(this.optionsStore.options.localization.locale);\r\n                  this.optionsStore.viewDate = today;\r\n                  if (this.validation.isValid(today, Unit.date))\r\n                      this.dates.setValue(today, this.dates.lastPickedIndex);\r\n                  break;\r\n          }\r\n      }\r\n      handleShowClockContainers(action) {\r\n          if (!this.display._hasTime) {\r\n              Namespace.errorMessages.throwError('Cannot show clock containers when time is disabled.');\r\n              return;\r\n          }\r\n          this.optionsStore.currentView = 'clock';\r\n          this.display.widget\r\n              .querySelectorAll(`.${Namespace.css.timeContainer} > div`)\r\n              .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n          let classToUse = '';\r\n          switch (action) {\r\n              case ActionTypes$1.showClock:\r\n                  classToUse = Namespace.css.clockContainer;\r\n                  this.display._update('clock');\r\n                  break;\r\n              case ActionTypes$1.showHours:\r\n                  classToUse = Namespace.css.hourContainer;\r\n                  this.display._update(Unit.hours);\r\n                  break;\r\n              case ActionTypes$1.showMinutes:\r\n                  classToUse = Namespace.css.minuteContainer;\r\n                  this.display._update(Unit.minutes);\r\n                  break;\r\n              case ActionTypes$1.showSeconds:\r\n                  classToUse = Namespace.css.secondContainer;\r\n                  this.display._update(Unit.seconds);\r\n                  break;\r\n          }\r\n          (this.display.widget.getElementsByClassName(classToUse)[0]).style.display = 'grid';\r\n      }\r\n      handleNextPrevious(action) {\r\n          const { unit, step } = CalendarModes[this.optionsStore.currentCalendarViewMode];\r\n          if (action === ActionTypes$1.next)\r\n              this.optionsStore.viewDate.manipulate(step, unit);\r\n          else\r\n              this.optionsStore.viewDate.manipulate(step * -1, unit);\r\n          this._eventEmitters.viewUpdate.emit();\r\n          this.display._showMode();\r\n      }\r\n      /**\r\n       * After setting the value it will either show the clock or hide the widget.\r\n       * @param e\r\n       */\r\n      hideOrClock(e) {\r\n          if (this.optionsStore.options.display.components.useTwentyfourHour &&\r\n              !this.optionsStore.options.display.components.minutes &&\r\n              !this.optionsStore.options.display.keepOpen &&\r\n              !this.optionsStore.options.display.inline) {\r\n              this.display.hide();\r\n          }\r\n          else {\r\n              this.do(e, ActionTypes$1.showClock);\r\n          }\r\n      }\r\n      /**\r\n       * Common function to manipulate {@link lastPicked} by `unit`.\r\n       * @param lastPicked\r\n       * @param unit\r\n       * @param value Value to change by\r\n       */\r\n      manipulateAndSet(lastPicked, unit, value = 1) {\r\n          const newDate = lastPicked.manipulate(value, unit);\r\n          if (this.validation.isValid(newDate, unit)) {\r\n              this.dates.setValue(newDate, this.dates.lastPickedIndex);\r\n          }\r\n      }\r\n  }\n\n  /**\r\n   * A robust and powerful date/time picker component.\r\n   */\r\n  class TempusDominus {\r\n      constructor(element, options = {}) {\r\n          this._subscribers = {};\r\n          this._isDisabled = false;\r\n          /**\r\n           * Event for when the input field changes. This is a class level method so there's\r\n           * something for the remove listener function.\r\n           * @private\r\n           */\r\n          this._inputChangeEvent = (event) => {\r\n              const internallyTriggered = event?.detail;\r\n              if (internallyTriggered)\r\n                  return;\r\n              const setViewDate = () => {\r\n                  if (this.dates.lastPicked)\r\n                      this.optionsStore.viewDate = this.dates.lastPicked.clone;\r\n              };\r\n              const value = this.optionsStore.input.value;\r\n              if (this.optionsStore.options.multipleDates) {\r\n                  try {\r\n                      const valueSplit = value.split(this.optionsStore.options.multipleDatesSeparator);\r\n                      for (let i = 0; i < valueSplit.length; i++) {\r\n                          this.dates.setFromInput(valueSplit[i], i);\r\n                      }\r\n                      setViewDate();\r\n                  }\r\n                  catch {\r\n                      console.warn('TD: Something went wrong trying to set the multipleDates values from the input field.');\r\n                  }\r\n              }\r\n              else {\r\n                  this.dates.setFromInput(value, 0);\r\n                  setViewDate();\r\n              }\r\n          };\r\n          /**\r\n           * Event for when the toggle is clicked. This is a class level method so there's\r\n           * something for the remove listener function.\r\n           * @private\r\n           */\r\n          this._toggleClickEvent = () => {\r\n              if (this.optionsStore.element?.disabled || this.optionsStore.input?.disabled)\r\n                  return;\r\n              this.toggle();\r\n          };\r\n          setupServiceLocator();\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.display = serviceLocator.locate(Display);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.actions = serviceLocator.locate(Actions);\r\n          if (!element) {\r\n              Namespace.errorMessages.mustProvideElement();\r\n          }\r\n          this.optionsStore.element = element;\r\n          this._initializeOptions(options, DefaultOptions, true);\r\n          this.optionsStore.viewDate.setLocale(this.optionsStore.options.localization.locale);\r\n          this.optionsStore.unset = true;\r\n          this._initializeInput();\r\n          this._initializeToggle();\r\n          if (this.optionsStore.options.display.inline)\r\n              this.display.show();\r\n          this._eventEmitters.triggerEvent.subscribe((e) => {\r\n              this._triggerEvent(e);\r\n          });\r\n          this._eventEmitters.viewUpdate.subscribe(() => {\r\n              this._viewUpdate();\r\n          });\r\n      }\r\n      get viewDate() {\r\n          return this.optionsStore.viewDate;\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n       * @param options\r\n       * @param reset\r\n       * @public\r\n       */\r\n      updateOptions(options, reset = false) {\r\n          if (reset)\r\n              this._initializeOptions(options, DefaultOptions);\r\n          else\r\n              this._initializeOptions(options, this.optionsStore.options);\r\n          this.display._rebuild();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n       * @public\r\n       */\r\n      toggle() {\r\n          if (this._isDisabled)\r\n              return;\r\n          this.display.toggle();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Shows the picker unless the picker is disabled.\r\n       * @public\r\n       */\r\n      show() {\r\n          if (this._isDisabled)\r\n              return;\r\n          this.display.show();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Hides the picker unless the picker is disabled.\r\n       * @public\r\n       */\r\n      hide() {\r\n          this.display.hide();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Disables the picker and the target input field.\r\n       * @public\r\n       */\r\n      disable() {\r\n          this._isDisabled = true;\r\n          // todo this might be undesired. If a dev disables the input field to\r\n          // only allow using the picker, this will break that.\r\n          this.optionsStore.input?.setAttribute('disabled', 'disabled');\r\n          this.display.hide();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Enables the picker and the target input field.\r\n       * @public\r\n       */\r\n      enable() {\r\n          this._isDisabled = false;\r\n          this.optionsStore.input?.removeAttribute('disabled');\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Clears all the selected dates\r\n       * @public\r\n       */\r\n      clear() {\r\n          this.optionsStore.input.value = '';\r\n          this.dates.clear();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n       * @param eventTypes See Namespace.Events\r\n       * @param callbacks Function to call when event is triggered\r\n       * @public\r\n       */\r\n      subscribe(eventTypes, callbacks) {\r\n          if (typeof eventTypes === 'string') {\r\n              eventTypes = [eventTypes];\r\n          }\r\n          let callBackArray;\r\n          if (!Array.isArray(callbacks)) {\r\n              callBackArray = [callbacks];\r\n          }\r\n          else {\r\n              callBackArray = callbacks;\r\n          }\r\n          if (eventTypes.length !== callBackArray.length) {\r\n              Namespace.errorMessages.subscribeMismatch();\r\n          }\r\n          const returnArray = [];\r\n          for (let i = 0; i < eventTypes.length; i++) {\r\n              const eventType = eventTypes[i];\r\n              if (!Array.isArray(this._subscribers[eventType])) {\r\n                  this._subscribers[eventType] = [];\r\n              }\r\n              this._subscribers[eventType].push(callBackArray[i]);\r\n              returnArray.push({\r\n                  unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n              });\r\n              if (eventTypes.length === 1) {\r\n                  return returnArray[0];\r\n              }\r\n          }\r\n          return returnArray;\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Hides the picker and removes event listeners\r\n       */\r\n      dispose() {\r\n          this.display.hide();\r\n          // this will clear the document click event listener\r\n          this.display._dispose();\r\n          this.optionsStore.input?.removeEventListener('change', this._inputChangeEvent);\r\n          if (this.optionsStore.options.allowInputToggle) {\r\n              this.optionsStore.input?.removeEventListener('click', this._toggleClickEvent);\r\n          }\r\n          this._toggle?.removeEventListener('click', this._toggleClickEvent);\r\n          this._subscribers = {};\r\n      }\r\n      /**\r\n       * Updates the options to use the provided language.\r\n       * THe language file must be loaded first.\r\n       * @param language\r\n       */\r\n      locale(language) {\r\n          let asked = loadedLocales[language];\r\n          if (!asked)\r\n              return;\r\n          this.updateOptions({\r\n              localization: asked,\r\n          });\r\n      }\r\n      /**\r\n       * Triggers an event like ChangeEvent when the picker has updated the value\r\n       * of a selected date.\r\n       * @param event Accepts a BaseEvent object.\r\n       * @private\r\n       */\r\n      _triggerEvent(event) {\r\n          event.viewMode = this.optionsStore.currentView;\r\n          const isChangeEvent = event.type === Namespace.events.change;\r\n          if (isChangeEvent) {\r\n              const { date, oldDate, isClear } = event;\r\n              if ((date && oldDate && date.isSame(oldDate)) ||\r\n                  (!isClear && !date && !oldDate)) {\r\n                  return;\r\n              }\r\n              this._handleAfterChangeEvent(event);\r\n              this.optionsStore.input?.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n              this.optionsStore.input?.dispatchEvent(new CustomEvent('change', { detail: event }));\r\n          }\r\n          this.optionsStore.element.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n          if (window.jQuery) {\r\n              const $ = window.jQuery;\r\n              if (isChangeEvent && this.optionsStore.input) {\r\n                  $(this.optionsStore.input).trigger(event);\r\n              }\r\n              else {\r\n                  $(this.optionsStore.element).trigger(event);\r\n              }\r\n          }\r\n          this._publish(event);\r\n      }\r\n      _publish(event) {\r\n          // return if event is not subscribed\r\n          if (!Array.isArray(this._subscribers[event.type])) {\r\n              return;\r\n          }\r\n          // Trigger callback for each subscriber\r\n          this._subscribers[event.type].forEach((callback) => {\r\n              callback(event);\r\n          });\r\n      }\r\n      /**\r\n       * Fires a ViewUpdate event when, for example, the month view is changed.\r\n       * @private\r\n       */\r\n      _viewUpdate() {\r\n          this._triggerEvent({\r\n              type: Namespace.events.update,\r\n              viewDate: this.optionsStore.viewDate.clone,\r\n          });\r\n      }\r\n      _unsubscribe(eventName, index) {\r\n          this._subscribers[eventName].splice(index, 1);\r\n      }\r\n      /**\r\n       * Merges two Option objects together and validates options type\r\n       * @param config new Options\r\n       * @param mergeTo Options to merge into\r\n       * @param includeDataset When true, the elements data-td attributes will be included in the\r\n       * @private\r\n       */\r\n      _initializeOptions(config, mergeTo, includeDataset = false) {\r\n          let newConfig = OptionConverter.deepCopy(config);\r\n          newConfig = OptionConverter._mergeOptions(newConfig, mergeTo);\r\n          if (includeDataset)\r\n              newConfig = OptionConverter._dataToOptions(this.optionsStore.element, newConfig);\r\n          OptionConverter._validateConflicts(newConfig);\r\n          newConfig.viewDate = newConfig.viewDate.setLocale(newConfig.localization.locale);\r\n          if (!this.optionsStore.viewDate.isSame(newConfig.viewDate)) {\r\n              this.optionsStore.viewDate = newConfig.viewDate;\r\n          }\r\n          /**\r\n           * Sets the minimum view allowed by the picker. For example the case of only\r\n           * allowing year and month to be selected but not date.\r\n           */\r\n          if (newConfig.display.components.year) {\r\n              this.optionsStore.minimumCalendarViewMode = 2;\r\n          }\r\n          if (newConfig.display.components.month) {\r\n              this.optionsStore.minimumCalendarViewMode = 1;\r\n          }\r\n          if (newConfig.display.components.date) {\r\n              this.optionsStore.minimumCalendarViewMode = 0;\r\n          }\r\n          this.optionsStore.currentCalendarViewMode = Math.max(this.optionsStore.minimumCalendarViewMode, this.optionsStore.currentCalendarViewMode);\r\n          // Update view mode if needed\r\n          if (CalendarModes[this.optionsStore.currentCalendarViewMode].name !==\r\n              newConfig.display.viewMode) {\r\n              this.optionsStore.currentCalendarViewMode = Math.max(CalendarModes.findIndex((x) => x.name === newConfig.display.viewMode), this.optionsStore.minimumCalendarViewMode);\r\n          }\r\n          if (this.display?.isVisible) {\r\n              this.display._update('all');\r\n          }\r\n          if (newConfig.display.components.useTwentyfourHour === undefined) {\r\n              newConfig.display.components.useTwentyfourHour = !!!newConfig.viewDate.parts()?.dayPeriod;\r\n          }\r\n          this.optionsStore.options = newConfig;\r\n      }\r\n      /**\r\n       * Checks if an input field is being used, attempts to locate one and sets an\r\n       * event listener if found.\r\n       * @private\r\n       */\r\n      _initializeInput() {\r\n          if (this.optionsStore.element.tagName == 'INPUT') {\r\n              this.optionsStore.input = this.optionsStore.element;\r\n          }\r\n          else {\r\n              let query = this.optionsStore.element.dataset.tdTargetInput;\r\n              if (query == undefined || query == 'nearest') {\r\n                  this.optionsStore.input =\r\n                      this.optionsStore.element.querySelector('input');\r\n              }\r\n              else {\r\n                  this.optionsStore.input =\r\n                      this.optionsStore.element.querySelector(query);\r\n              }\r\n          }\r\n          if (!this.optionsStore.input)\r\n              return;\r\n          this.optionsStore.input.addEventListener('change', this._inputChangeEvent);\r\n          if (this.optionsStore.options.allowInputToggle) {\r\n              this.optionsStore.input.addEventListener('click', this._toggleClickEvent);\r\n          }\r\n          if (this.optionsStore.input.value) {\r\n              this._inputChangeEvent();\r\n          }\r\n      }\r\n      /**\r\n       * Attempts to locate a toggle for the picker and sets an event listener\r\n       * @private\r\n       */\r\n      _initializeToggle() {\r\n          if (this.optionsStore.options.display.inline)\r\n              return;\r\n          let query = this.optionsStore.element.dataset.tdTargetToggle;\r\n          if (query == 'nearest') {\r\n              query = '[data-td-toggle=\"datetimepicker\"]';\r\n          }\r\n          this._toggle =\r\n              query == undefined\r\n                  ? this.optionsStore.element\r\n                  : this.optionsStore.element.querySelector(query);\r\n          this._toggle.addEventListener('click', this._toggleClickEvent);\r\n      }\r\n      /**\r\n       * If the option is enabled this will render the clock view after a date pick.\r\n       * @param e change event\r\n       * @private\r\n       */\r\n      _handleAfterChangeEvent(e) {\r\n          if (\r\n          // options is disabled\r\n          !this.optionsStore.options.promptTimeOnDateChange ||\r\n              this.optionsStore.options.display.inline ||\r\n              this.optionsStore.options.display.sideBySide ||\r\n              // time is disabled\r\n              !this.display._hasTime ||\r\n              // clock component is already showing\r\n              this.display.widget\r\n                  ?.getElementsByClassName(Namespace.css.show)[0]\r\n                  .classList.contains(Namespace.css.timeContainer))\r\n              return;\r\n          // First time ever. If useCurrent option is set to true (default), do nothing\r\n          // because the first date is selected automatically.\r\n          // or date didn't change (time did) or date changed because time did.\r\n          if ((!e.oldDate && this.optionsStore.options.useCurrent) ||\r\n              (e.oldDate && e.date?.isSame(e.oldDate))) {\r\n              return;\r\n          }\r\n          clearTimeout(this._currentPromptTimeTimeout);\r\n          this._currentPromptTimeTimeout = setTimeout(() => {\r\n              if (this.display.widget) {\r\n                  this._eventEmitters.action.emit({\r\n                      e: {\r\n                          currentTarget: this.display.widget.querySelector(`.${Namespace.css.switch} div`),\r\n                      },\r\n                      action: ActionTypes$1.togglePicker,\r\n                  });\r\n              }\r\n          }, this.optionsStore.options.promptTimeOnDateChangeTransitionDelay);\r\n      }\r\n  }\r\n  /**\r\n   * Whenever a locale is loaded via a plugin then store it here based on the\r\n   * locale name. E.g. loadedLocales['ru']\r\n   */\r\n  const loadedLocales = {};\r\n  // noinspection JSUnusedGlobalSymbols\r\n  /**\r\n   * Called from a locale plugin.\r\n   * @param l locale object for localization options\r\n   */\r\n  const loadLocale = (l) => {\r\n      if (loadedLocales[l.name])\r\n          return;\r\n      loadedLocales[l.name] = l.localization;\r\n  };\r\n  /**\r\n   * A sets the global localization options to the provided locale name.\r\n   * `loadLocale` MUST be called first.\r\n   * @param l\r\n   */\r\n  const locale = (l) => {\r\n      let asked = loadedLocales[l];\r\n      if (!asked)\r\n          return;\r\n      DefaultOptions.localization = asked;\r\n  };\r\n  // noinspection JSUnusedGlobalSymbols\r\n  /**\r\n   * Called from a plugin to extend or override picker defaults.\r\n   * @param plugin\r\n   * @param option\r\n   */\r\n  const extend = function (plugin, option) {\r\n      if (!plugin)\r\n          return tempusDominus$1;\r\n      if (!plugin.installed) {\r\n          // install plugin only once\r\n          plugin(option, { TempusDominus, Dates, Display, DateTime, ErrorMessages }, tempusDominus$1);\r\n          plugin.installed = true;\r\n      }\r\n      return tempusDominus$1;\r\n  };\r\n  const version = '6.2.5';\r\n  const tempusDominus$1 = {\r\n      TempusDominus,\r\n      extend,\r\n      loadLocale,\r\n      locale,\r\n      Namespace,\r\n      DefaultOptions,\r\n      DateTime,\r\n      Unit,\r\n      version\r\n  };\n\n  var _tempusDominus = {\n    __proto__: null,\n    TempusDominus: TempusDominus,\n    extend: extend,\n    loadLocale: loadLocale,\n    locale: locale,\n    Namespace: Namespace,\n    DefaultOptions: DefaultOptions,\n    DateTime: DateTime,\n    get Unit () { return Unit; },\n    version: version\n  };\n\n  var luxon_parse = (option, tdClasses, tdFactory) => {\r\n      tdClasses.Dates.prototype.setFromInput = function (value, index) {\r\n          if (this.optionsStore.options.meta.format) {\r\n              let options = {\r\n                  locale: this.optionsStore.options.localization.locale\r\n              };\r\n              let parsedDate = new tdFactory.DateTime(luxon__namespace.DateTime.fromFormat(value, this.optionsStore.options.meta.format, options).toJSDate());\r\n              // Check if the date is valid (An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.)\r\n              if (parsedDate && parsedDate.getTime() === parsedDate.getTime()) {\r\n                  let date = tdFactory.DateTime.convert(parsedDate, this.optionsStore.options.localization.locale);\r\n                  this.setValue(date, index);\r\n              }\r\n              else {\r\n                  console.error('Luxon failed to parse the input date.');\r\n              }\r\n          }\r\n          else {\r\n              console.error('Missing format.');\r\n          }\r\n      };\r\n      tdClasses.Dates.prototype.formatInput = function (date) {\r\n          if (this.optionsStore.options.meta.format) {\r\n              let options = {\r\n                  locale: this.optionsStore.options.localization.locale\r\n              };\r\n              return date ? luxon__namespace.DateTime.fromJSDate(date, options).toFormat(this.optionsStore.options.meta.format) : \"\";\r\n          }\r\n          else {\r\n              console.error('Missing format.');\r\n          }\r\n      };\r\n  };\n\n  ///<reference src=\"js/tempus-dominus\"/>\n\n  const tempusDominus = _tempusDominus;\n\n  tempusDominus.extend(luxon_parse); //***\n  // tempusDominus.extend(fa_five); //*** for v2022 only\n\n  /*!\n    * Tempus Dominus v6.2.5 (https://getdatepicker.com/)\n    * Copyright 2013-2021 Jonathan Peterson\n    * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n    */\n  tempusDominus.jQueryInterface = function (option, argument) {\n    if (this.length === 1) {\n      return tempusDominus.jQueryHandleThis(this, option, argument);\n    }\n    // \"this\" is jquery here\n    return this.each(function () {\n      tempusDominus.jQueryHandleThis(this, option, argument);\n    });\n  };\n\n  tempusDominus.jQueryHandleThis = function (me, option, argument) {\n    let data = $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey);\n    if (typeof option === 'object') {\n          option = $__default[\"default\"].extend({}, tempusDominus.DefaultOptions, option);\n    }\n\n    if (!data) {\n      data = new tempusDominus.TempusDominus($__default[\"default\"](me)[0], option);\n      $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey, data);\n    }\n\n    if (typeof option === 'string') {\n      if (data[option] === undefined) {\n        throw new Error(`No method named \"${option}\"`);\n      }\n      if (argument === undefined) {\n        return data[option]();\n      } else {\n        if (option === 'date') {\n          data.isDateUpdateThroughDateOptionFromClientCode = true;\n        }\n        const ret = data[option](argument);\n        data.isDateUpdateThroughDateOptionFromClientCode = false;\n        return ret;\n      }\n    }\n  };\n\n  tempusDominus.getSelectorFromElement = function ($element) {\n    let selector = $element.data('target'),\n      $selector;\n\n    if (!selector) {\n      selector = $element.attr('href') || '';\n      selector = /^#[a-z]/i.test(selector) ? selector : null;\n    }\n    $selector = $__default[\"default\"](selector);\n    if ($selector.length === 0) {\n      return $element;\n    }\n\n    if (!$selector.data(tempusDominus.Namespace.dataKey)) {\n      $selector.data(tempusDominus.Namespace.dataKey, $__default[\"default\"].extend({}, $selector.data(), $__default[\"default\"](this).data())); //***\n    }\n\n    return $selector;\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  //*** $(document)\n  //   .on(\n  //     `click${tempusDominus.Namespace.events.key}.data-api`,\n  //     `[data-toggle=\"${tempusDominus.Namespace.dataKey}\"]`,\n  //     function () {\n  //       const $originalTarget = $(this),\n  //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (\n  //         config._options.allowInputToggle &&\n  //         $originalTarget.is('input[data-toggle=\"datetimepicker\"]')\n  //       ) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'toggle');\n  //     }\n  //   )\n  //   .on(\n  //     tempusDominus.Namespace.events.change,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this));\n  //       if ($target.length === 0 || event.isInit) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, '_change', event);\n  //     }\n  //   )\n  //   .on(\n  //     tempusDominus.Namespace.events.blur,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this)),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (config._options.debug || window.debug) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n  //     }\n  //   )\n  //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n  //     const $target = tempusDominus.getSelectorFromElement($(this));\n  //     if ($target.length === 0) {\n  //       return;\n  //     }\n  //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n  //   })\n  //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n  //     const $target = tempusDominus.getSelectorFromElement($(this));\n  //     if ($target.length === 0) {\n  //       return;\n  //     }\n  //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n  //   })*/\n  //   .on(\n  //     tempusDominus.Namespace.events.focus,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this)),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (!config._options.allowInputToggle) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'show', event);\n  //     }\n  //   );\n  const name = 'tempusDominus';\n  const JQUERY_NO_CONFLICT = $__default[\"default\"].fn[name];\n  $__default[\"default\"].fn[name] = tempusDominus.jQueryInterface;\n  $__default[\"default\"].fn[name].Constructor = tempusDominus.TempusDominus;\n  $__default[\"default\"].fn[name].noConflict = function () {\n    $__default[\"default\"].fn[name] = JQUERY_NO_CONFLICT;\n    return tempusDominus.jQueryInterface;\n  };\n\n  return tempusDominus;\n\n})(jQuery, luxon);\n"],"mappings":"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"}